webpackHotUpdate("static/development/pages/index.js",{

/***/ "./src/lib/chart.js":
/*!**************************!*\
  !*** ./src/lib/chart.js ***!
  \**************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/assertThisInitialized */ \"./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/esm/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/esm/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/utils */ \"./src/lib/utils/utils.js\");\n/* harmony import */ var _base_ChartComponent__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./base/ChartComponent */ \"./src/lib/base/ChartComponent.js\");\n/* harmony import */ var mustache__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! mustache */ \"./node_modules/mustache/mustache.js\");\n/* harmony import */ var mustache__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(mustache__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var _utils_d3__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./utils/d3 */ \"./src/lib/utils/d3.js\");\n\n\n\n\n\n\n\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Object(_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n // import defaultData from './defaultData.json';\n\nvar dateParse = _utils_d3__WEBPACK_IMPORTED_MODULE_10__[\"default\"].timeParse('%Y-%m-%d');\nvar dateFormat = _utils_d3__WEBPACK_IMPORTED_MODULE_10__[\"default\"].timeFormat('%b %e');\nvar dateFormat_tt = _utils_d3__WEBPACK_IMPORTED_MODULE_10__[\"default\"].timeFormat('%B %e');\nvar numberFormat_tt = _utils_d3__WEBPACK_IMPORTED_MODULE_10__[\"default\"].format(',');\n\nvar WeeklyAverage = /*#__PURE__*/function (_ChartComponent) {\n  Object(_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(WeeklyAverage, _ChartComponent);\n\n  var _super = _createSuper(WeeklyAverage);\n\n  function WeeklyAverage() {\n    var _this;\n\n    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, WeeklyAverage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_this), \"defaultProps\", {\n      stroke: 'steelblue',\n      strokeWidth: 2.5,\n      fill: '#eee',\n      height: 200,\n      avg_days: 7,\n      annotations: [],\n      population: false,\n      bars: true,\n      padding: 0,\n      labels: false,\n      xaxis: true,\n      variable_name: 'cases',\n      date_range: false,\n      text: {\n        daily_numbers: 'Daily new ',\n        tooltip_suffix: ' new ',\n        avg: '{{ average }}-day average',\n        per_pop_tt_suffix: ' per 100k people in the population',\n        subhed: ''\n      }\n    });\n\n    Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_this), \"defaultData\", []);\n\n    return _this;\n  }\n\n  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(WeeklyAverage, [{\n    key: \"draw\",\n    value: function draw() {\n      var data = this.data();\n      var props = this.props();\n      var node = this.selection().node();\n      var margin = {\n        left: 20,\n        right: 50,\n        top: 10,\n        bottom: 30\n      };\n      data.forEach(function (d, i) {\n        d.use_count = props.population ? d.count / props.population * 100000 : d.count;\n        d.mean = _utils_d3__WEBPACK_IMPORTED_MODULE_10__[\"default\"].mean(data.slice(i - props.avg_days, i), function (d) {\n          return +d.count;\n        }); // avg calc\n\n        d.use_mean = props.population ? d.mean / props.population * 100000 : d.mean;\n      });\n\n      var _node$getBoundingClie = node.getBoundingClientRect(),\n          width = _node$getBoundingClie.width;\n\n      var transition = _utils_d3__WEBPACK_IMPORTED_MODULE_10__[\"default\"].transition().duration(750);\n\n      if (props.text.subhed.length > 0) {\n        this.selection().appendSelect('p.subhed').text(props.text.subhed);\n      }\n\n      var g = this.selection().appendSelect('svg') // see docs in ./utils/d3.js\n      .attr('width', width).attr('height', props.height).appendSelect('g').attr('transform', \"translate(\".concat(margin.left, \", \").concat(margin.top, \")\"));\n      var dateList = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_7__[\"getDates\"])(dateParse(data[0].date), dateParse(data[data.length - 1].date)); // needs reworking\n      // x scale\n\n      var scaleX = _utils_d3__WEBPACK_IMPORTED_MODULE_10__[\"default\"].scaleBand().round(false).range([0, width - margin.right - margin.left]).domain(dateList).padding(props.padding); // y scale\n\n      var scaleY = _utils_d3__WEBPACK_IMPORTED_MODULE_10__[\"default\"].scaleLinear().range([props.height - margin.bottom - margin.top, 0]).domain(_utils_d3__WEBPACK_IMPORTED_MODULE_10__[\"default\"].extent(data, function (d) {\n        return +d.use_count;\n      })); // line\n\n      var line = _utils_d3__WEBPACK_IMPORTED_MODULE_10__[\"default\"].line().x(function (d) {\n        return scaleX(dateParse(d.date));\n      }).y(function (d) {\n        return scaleY(d.use_mean ? d.use_mean : 0);\n      });\n      g.appendSelect('g.axis--y').attr('class', 'axis--y axis').transition(transition).attr('transform', \"translate(\".concat(width - margin.right - margin.left, \",0)\")).call(_utils_d3__WEBPACK_IMPORTED_MODULE_10__[\"default\"].axisRight(scaleY).ticks(props.bars ? 3 : 1));\n\n      if (props.xaxis) {\n        g.appendSelect('g.axis--x').attr('class', 'axis--x axis').transition(transition).attr('transform', \"translate(0,\".concat(props.height - margin.bottom - margin.top, \")\")).call(_utils_d3__WEBPACK_IMPORTED_MODULE_10__[\"default\"].axisBottom(scaleX).tickValues([dateList[0], dateList[dateList.length - 1]]).tickFormat(dateFormat));\n      }\n\n      if (props.bars) {\n        var bars = g.appendSelect('g.bars-container').selectAll('.bar').data(data, function (d, i) {\n          return d.date;\n        }); // for smooth data updation\n\n        bars.enter().append('rect').attr('class', function (d) {\n          return \"bar d-\".concat(d.date.replace(/-/g, ''));\n        }).style('fill', props.fill).attr('height', function (d) {\n          return props.height - margin.top - margin.bottom - scaleY(+d.use_count);\n        }).attr('x', function (d, i) {\n          return scaleX(dateParse(d.date));\n        }).attr('y', function (d) {\n          return scaleY(+d.use_count);\n        }).attr('width', scaleX.bandwidth()).merge(bars).transition(transition).attr('height', function (d) {\n          return props.height - margin.top - margin.bottom - scaleY(+d.use_count);\n        }).attr('x', function (d, i) {\n          return scaleX(dateParse(d.date));\n        }).attr('y', function (d) {\n          return scaleY(+d.use_count);\n        }).attr('width', scaleX.bandwidth());\n        bars.exit().transition(transition).attr('height', 0).remove();\n        var bars_dummy = g.appendSelect('g.dummy-container').selectAll('.dummy').data(data, function (d, i) {\n          return d.date;\n        });\n        bars_dummy.enter().append('rect').style('fill', 'white').attr('class', 'dummy').style('opacity', 0).attr('height', function (d) {\n          return props.height;\n        }).attr('x', function (d, i) {\n          return scaleX(dateParse(d.date));\n        }).attr('y', function (d) {\n          return 0;\n        }).attr('width', scaleX.bandwidth()).on('mouseover', showTooltip).on('mouseout', hideTooltip).merge(bars_dummy).transition(transition).attr('height', function (d) {\n          return props.height;\n        }).attr('x', function (d, i) {\n          return scaleX(dateParse(d.date));\n        }).attr('y', function (d) {\n          return 0;\n        }).attr('width', scaleX.bandwidth());\n        bars_dummy.exit().transition(transition).attr('height', 0).remove();\n        bars_dummy.on('mouseover', showTooltip).on('mouseout', hideTooltip);\n      } // avg line\n\n\n      var avg_line = g.selectAll('.avg-line').data([data]);\n      avg_line.enter().append('path').attr('class', 'avg-line').merge(avg_line).transition(transition).attr('d', line).attr('fill', 'none').attr('stroke', props.stroke).attr('stroke-width', props.strokeWidth); // LABELS\n\n      if (props.labels) {\n        var label_container = g.appendSelect('g.labels'); // avg label\n\n        var avg_label = label_container.appendSelect('g.avg-label').attr('transform', \"translate(\".concat(scaleX(dateParse(data[14].date)), \",\").concat(scaleY(data[14].use_mean) - props.height / 20, \")\"));\n        avg_label.appendSelect('line').attr('x1', 0).attr('x2', 0).attr('y1', props.height / 20).attr('y2', 0);\n        avg_label.appendSelect('text').attr('dx', -10).attr('dy', -5).text(mustache__WEBPACK_IMPORTED_MODULE_9___default.a.render(props.text.avg, {\n          average: props.avg_days\n        })); // new numbers label\n        // GET MAX\n\n        var max = _utils_d3__WEBPACK_IMPORTED_MODULE_10__[\"default\"].max(data, function (d) {\n          return d.use_count;\n        });\n        var max_var = data.filter(function (d) {\n          return d.use_count == max;\n        })[0];\n        var new_nos_label = label_container.appendSelect('g.new-nos-label').attr('transform', \"translate(\".concat(scaleX(dateParse(max_var.date)), \",\").concat(scaleY(max_var.use_count), \")\"));\n        new_nos_label.appendSelect('line').attr('x1', -10).attr('x2', 0).attr('y1', 10).attr('y2', 10);\n        new_nos_label.appendSelect('text').style('text-anchor', 'end').attr('dx', -13).attr('dy', 12).text(\"\".concat(props.text.daily_numbers + props.variable_name));\n      } // tooltip\n\n\n      var tooltipBox = this.selection().appendSelect('div.custom-tooltip');\n      var tt_inner = tooltipBox.appendSelect('div.tooltip-inner');\n\n      function showTooltip(obj) {\n        var tooltip_text_add = props.population ? props.text.per_pop_tt_suffix : '';\n        var formatFunction = props.population ? _utils_utils__WEBPACK_IMPORTED_MODULE_7__[\"round\"] : numberFormat_tt;\n        g.select(\".bar.d-\".concat(obj.date.replace(/-/g, ''))).classed('active', true);\n        var coords = [];\n        coords[0] = scaleX(dateParse(obj.date)) + margin.left + scaleX.bandwidth() / 2;\n        coords[1] = scaleY(obj.use_count) + margin.top;\n        var q = getTooltipType(coords, [props.height, width]);\n        tooltipBox.classed('tooltip-active', true).classed('tooltip-ne tooltip-s tooltip-n tooltip-sw tooltip-nw tooltip-se', false).style('left', \"\".concat(coords[0], \"px\")).style('top', \"\".concat(coords[1], \"px\")).classed(\"tooltip-\".concat(q), true);\n        tt_inner.appendSelect('div.tt-header').text(dateFormat_tt(dateParse(obj.date)));\n        tt_inner.appendSelect('div.tt-row').text(formatFunction(obj.use_count) + props.text.tooltip_suffix + props.variable_name + tooltip_text_add);\n      }\n\n      function hideTooltip() {\n        g.select('.bar.active').classed('active', false);\n        tooltipBox.classed('tooltip-active', false);\n      }\n\n      function getTooltipType(coords, size) {\n        var l = [];\n        var ns_threshold = size[1] < 500 ? 4 : 2;\n\n        if (coords[1] > size[1] / ns_threshold) {\n          l.push('s');\n        } else {\n          l.push('n');\n        }\n\n        if (coords[0] > size[0] / 2) {\n          l.push('e');\n        }\n\n        if (coords[0] < size[0] / 2) {\n          l.push('w');\n        }\n\n        return l.join('');\n      } // Annotations\n      // Reposition if already on the page\n\n\n      var annotation_check = !!g.selectAll('g.annotations-container').node();\n      props.annotations = props.annotations.filter(function (d) {\n        if (scaleX(dateParse(d.date)) && d.text.length > 1) {\n          return d;\n        }\n      });\n\n      if (props.annotations.length > 0 || annotation_check) {\n        var annotations_container = g.appendSelect('g.annotations-container').selectAll('.annotation').data(props.annotations, function (d, i) {\n          return d.date;\n        });\n        var annotation = annotations_container.enter().append('g').attr('class', function (d) {\n          return d[\"class\"] ? \"annotation \".concat(d[\"class\"]) : 'annotation';\n        }).attr('transform', function (d) {\n          return \"translate(\".concat(scaleX(dateParse(d.date)), \",0)\");\n        });\n        annotations_container.merge(annotations_container).transition(transition).attr('transform', function (d) {\n          return \"translate(\".concat(scaleX(dateParse(d.date)), \",0)\");\n        });\n        annotation.appendSelect('line').attr('x1', 0).attr('x2', 0).attr('y2', function (d) {\n          if (scaleX(dateParse(d.date)) > width / 2) {\n            return props.height / 6 * 1.5 - 10;\n          } else {\n            return props.height / 6 * 4 - 10;\n          }\n        }).attr('y1', props.height - margin.top - margin.bottom);\n        var text_container = annotation.appendSelect('g.text-container').attr('transform', function (d) {\n          if (scaleX(dateParse(d.date)) > width / 2) {\n            return \"translate(-8,\".concat(props.height / 6 * 1.5, \")\");\n          } else {\n            return \"translate(8,\".concat(props.height / 6 * 4, \")\");\n          }\n        }).attr('text-anchor', function (d) {\n          if (scaleX(dateParse(d.date)) > width / 2) {\n            return 'end';\n          } else {\n            return 'start';\n          }\n        });\n        text_container.appendSelect('text.date').text(function (d) {\n          return dateFormat_tt(dateParse(d.date));\n        });\n        text_container.appendSelect('text.text').attr('dy', 16).text(function (d) {\n          return d.text;\n        });\n        annotations_container.exit().remove();\n      }\n\n      return this;\n    }\n  }]);\n\n  return WeeklyAverage;\n}(_base_ChartComponent__WEBPACK_IMPORTED_MODULE_8__[\"default\"]);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (WeeklyAverage);\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports_1 = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports_1;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports_1)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbGliL2NoYXJ0LmpzPzdiYjgiXSwibmFtZXMiOlsiZGF0ZVBhcnNlIiwiZDMiLCJ0aW1lUGFyc2UiLCJkYXRlRm9ybWF0IiwidGltZUZvcm1hdCIsImRhdGVGb3JtYXRfdHQiLCJudW1iZXJGb3JtYXRfdHQiLCJmb3JtYXQiLCJXZWVrbHlBdmVyYWdlIiwic3Ryb2tlIiwic3Ryb2tlV2lkdGgiLCJmaWxsIiwiaGVpZ2h0IiwiYXZnX2RheXMiLCJhbm5vdGF0aW9ucyIsInBvcHVsYXRpb24iLCJiYXJzIiwicGFkZGluZyIsImxhYmVscyIsInhheGlzIiwidmFyaWFibGVfbmFtZSIsImRhdGVfcmFuZ2UiLCJ0ZXh0IiwiZGFpbHlfbnVtYmVycyIsInRvb2x0aXBfc3VmZml4IiwiYXZnIiwicGVyX3BvcF90dF9zdWZmaXgiLCJzdWJoZWQiLCJkYXRhIiwicHJvcHMiLCJub2RlIiwic2VsZWN0aW9uIiwibWFyZ2luIiwibGVmdCIsInJpZ2h0IiwidG9wIiwiYm90dG9tIiwiZm9yRWFjaCIsImQiLCJpIiwidXNlX2NvdW50IiwiY291bnQiLCJtZWFuIiwic2xpY2UiLCJ1c2VfbWVhbiIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsIndpZHRoIiwidHJhbnNpdGlvbiIsImR1cmF0aW9uIiwibGVuZ3RoIiwiYXBwZW5kU2VsZWN0IiwiZyIsImF0dHIiLCJkYXRlTGlzdCIsImdldERhdGVzIiwiZGF0ZSIsInNjYWxlWCIsInNjYWxlQmFuZCIsInJvdW5kIiwicmFuZ2UiLCJkb21haW4iLCJzY2FsZVkiLCJzY2FsZUxpbmVhciIsImV4dGVudCIsImxpbmUiLCJ4IiwieSIsImNhbGwiLCJheGlzUmlnaHQiLCJ0aWNrcyIsImF4aXNCb3R0b20iLCJ0aWNrVmFsdWVzIiwidGlja0Zvcm1hdCIsInNlbGVjdEFsbCIsImVudGVyIiwiYXBwZW5kIiwicmVwbGFjZSIsInN0eWxlIiwiYmFuZHdpZHRoIiwibWVyZ2UiLCJleGl0IiwicmVtb3ZlIiwiYmFyc19kdW1teSIsIm9uIiwic2hvd1Rvb2x0aXAiLCJoaWRlVG9vbHRpcCIsImF2Z19saW5lIiwibGFiZWxfY29udGFpbmVyIiwiYXZnX2xhYmVsIiwiTXVzdGFjaGUiLCJyZW5kZXIiLCJhdmVyYWdlIiwibWF4IiwibWF4X3ZhciIsImZpbHRlciIsIm5ld19ub3NfbGFiZWwiLCJ0b29sdGlwQm94IiwidHRfaW5uZXIiLCJvYmoiLCJ0b29sdGlwX3RleHRfYWRkIiwiZm9ybWF0RnVuY3Rpb24iLCJzZWxlY3QiLCJjbGFzc2VkIiwiY29vcmRzIiwicSIsImdldFRvb2x0aXBUeXBlIiwic2l6ZSIsImwiLCJuc190aHJlc2hvbGQiLCJwdXNoIiwiam9pbiIsImFubm90YXRpb25fY2hlY2siLCJhbm5vdGF0aW9uc19jb250YWluZXIiLCJhbm5vdGF0aW9uIiwidGV4dF9jb250YWluZXIiLCJDaGFydENvbXBvbmVudCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBRUE7QUFDQTtDQUdBOztBQUVBLElBQU1BLFNBQVMsR0FBR0Msa0RBQUUsQ0FBQ0MsU0FBSCxDQUFhLFVBQWIsQ0FBbEI7QUFDQSxJQUFNQyxVQUFVLEdBQUdGLGtEQUFFLENBQUNHLFVBQUgsQ0FBYyxPQUFkLENBQW5CO0FBQ0EsSUFBTUMsYUFBYSxHQUFHSixrREFBRSxDQUFDRyxVQUFILENBQWMsT0FBZCxDQUF0QjtBQUNBLElBQU1FLGVBQWUsR0FBR0wsa0RBQUUsQ0FBQ00sTUFBSCxDQUFVLEdBQVYsQ0FBeEI7O0lBRU1DLGE7Ozs7Ozs7Ozs7Ozs7Ozs7dU5BQ1c7QUFDYkMsWUFBTSxFQUFFLFdBREs7QUFFYkMsaUJBQVcsRUFBRSxHQUZBO0FBR2JDLFVBQUksRUFBRSxNQUhPO0FBSWJDLFlBQU0sRUFBRSxHQUpLO0FBS2JDLGNBQVEsRUFBRSxDQUxHO0FBTWJDLGlCQUFXLEVBQUUsRUFOQTtBQU9iQyxnQkFBVSxFQUFFLEtBUEM7QUFRYkMsVUFBSSxFQUFFLElBUk87QUFTYkMsYUFBTyxFQUFFLENBVEk7QUFVYkMsWUFBTSxFQUFFLEtBVks7QUFXYkMsV0FBSyxFQUFFLElBWE07QUFZYkMsbUJBQWEsRUFBRSxPQVpGO0FBYWJDLGdCQUFVLEVBQUUsS0FiQztBQWNiQyxVQUFJLEVBQUU7QUFDSkMscUJBQWEsRUFBRSxZQURYO0FBRUpDLHNCQUFjLEVBQUUsT0FGWjtBQUdKQyxXQUFHLEVBQUUsMkJBSEQ7QUFJSkMseUJBQWlCLEVBQUUsb0NBSmY7QUFLSkMsY0FBTSxFQUFDO0FBTEg7QUFkTyxLOztzTkF1QkQsRTs7Ozs7OzsyQkFFUDtBQUNMLFVBQU1DLElBQUksR0FBRyxLQUFLQSxJQUFMLEVBQWI7QUFDQSxVQUFNQyxLQUFLLEdBQUcsS0FBS0EsS0FBTCxFQUFkO0FBQ0EsVUFBTUMsSUFBSSxHQUFHLEtBQUtDLFNBQUwsR0FBaUJELElBQWpCLEVBQWI7QUFDQSxVQUFNRSxNQUFNLEdBQUc7QUFBRUMsWUFBSSxFQUFFLEVBQVI7QUFBWUMsYUFBSyxFQUFFLEVBQW5CO0FBQXVCQyxXQUFHLEVBQUUsRUFBNUI7QUFBZ0NDLGNBQU0sRUFBRTtBQUF4QyxPQUFmO0FBRUFSLFVBQUksQ0FBQ1MsT0FBTCxDQUFhLFVBQVNDLENBQVQsRUFBWUMsQ0FBWixFQUFlO0FBQzFCRCxTQUFDLENBQUNFLFNBQUYsR0FBZVgsS0FBSyxDQUFDZCxVQUFQLEdBQXNCdUIsQ0FBQyxDQUFDRyxLQUFGLEdBQVVaLEtBQUssQ0FBQ2QsVUFBaEIsR0FBNkIsTUFBbkQsR0FBNkR1QixDQUFDLENBQUNHLEtBQTdFO0FBQ0FILFNBQUMsQ0FBQ0ksSUFBRixHQUFTekMsa0RBQUUsQ0FBQ3lDLElBQUgsQ0FBUWQsSUFBSSxDQUFDZSxLQUFMLENBQVlKLENBQUMsR0FBR1YsS0FBSyxDQUFDaEIsUUFBdEIsRUFBaUMwQixDQUFqQyxDQUFSLEVBQTZDLFVBQUFELENBQUM7QUFBQSxpQkFBSSxDQUFDQSxDQUFDLENBQUNHLEtBQVA7QUFBQSxTQUE5QyxDQUFULENBRjBCLENBRTRDOztBQUN0RUgsU0FBQyxDQUFDTSxRQUFGLEdBQWNmLEtBQUssQ0FBQ2QsVUFBUCxHQUFzQnVCLENBQUMsQ0FBQ0ksSUFBRixHQUFTYixLQUFLLENBQUNkLFVBQWYsR0FBNEIsTUFBbEQsR0FBNER1QixDQUFDLENBQUNJLElBQTNFO0FBQ0QsT0FKRDs7QUFOSyxrQ0FZYVosSUFBSSxDQUFDZSxxQkFBTCxFQVpiO0FBQUEsVUFZR0MsS0FaSCx5QkFZR0EsS0FaSDs7QUFhTCxVQUFNQyxVQUFVLEdBQUc5QyxrREFBRSxDQUFDOEMsVUFBSCxHQUNoQkMsUUFEZ0IsQ0FDUCxHQURPLENBQW5COztBQUdBLFVBQUluQixLQUFLLENBQUNQLElBQU4sQ0FBV0ssTUFBWCxDQUFrQnNCLE1BQWxCLEdBQXlCLENBQTdCLEVBQStCO0FBQzdCLGFBQUtsQixTQUFMLEdBQ0ttQixZQURMLENBQ2tCLFVBRGxCLEVBRUs1QixJQUZMLENBRVVPLEtBQUssQ0FBQ1AsSUFBTixDQUFXSyxNQUZyQjtBQUdEOztBQUNELFVBQU13QixDQUFDLEdBQUcsS0FBS3BCLFNBQUwsR0FDUG1CLFlBRE8sQ0FDTSxLQUROLEVBQ2E7QUFEYixPQUVQRSxJQUZPLENBRUYsT0FGRSxFQUVPTixLQUZQLEVBR1BNLElBSE8sQ0FHRixRQUhFLEVBR1F2QixLQUFLLENBQUNqQixNQUhkLEVBSVBzQyxZQUpPLENBSU0sR0FKTixFQUtQRSxJQUxPLENBS0YsV0FMRSxzQkFLd0JwQixNQUFNLENBQUNDLElBTC9CLGVBS3dDRCxNQUFNLENBQUNHLEdBTC9DLE9BQVY7QUFPQSxVQUFNa0IsUUFBUSxHQUFHQyw2REFBUSxDQUFDdEQsU0FBUyxDQUFDNEIsSUFBSSxDQUFDLENBQUQsQ0FBSixDQUFRMkIsSUFBVCxDQUFWLEVBQTBCdkQsU0FBUyxDQUFDNEIsSUFBSSxDQUFDQSxJQUFJLENBQUNxQixNQUFMLEdBQWMsQ0FBZixDQUFKLENBQXNCTSxJQUF2QixDQUFuQyxDQUF6QixDQTVCSyxDQTRCc0Y7QUFFM0Y7O0FBQ0EsVUFBTUMsTUFBTSxHQUFHdkQsa0RBQUUsQ0FBQ3dELFNBQUgsR0FDWkMsS0FEWSxDQUNOLEtBRE0sRUFFWkMsS0FGWSxDQUVOLENBQUMsQ0FBRCxFQUFJYixLQUFLLEdBQUdkLE1BQU0sQ0FBQ0UsS0FBZixHQUF1QkYsTUFBTSxDQUFDQyxJQUFsQyxDQUZNLEVBR1oyQixNQUhZLENBR0xQLFFBSEssRUFJWnBDLE9BSlksQ0FJSlksS0FBSyxDQUFDWixPQUpGLENBQWYsQ0EvQkssQ0FxQ0w7O0FBQ0EsVUFBTTRDLE1BQU0sR0FBRzVELGtEQUFFLENBQUM2RCxXQUFILEdBQ1pILEtBRFksQ0FDTixDQUFDOUIsS0FBSyxDQUFDakIsTUFBTixHQUFlb0IsTUFBTSxDQUFDSSxNQUF0QixHQUErQkosTUFBTSxDQUFDRyxHQUF2QyxFQUE0QyxDQUE1QyxDQURNLEVBRVp5QixNQUZZLENBRUwzRCxrREFBRSxDQUFDOEQsTUFBSCxDQUFVbkMsSUFBVixFQUFnQixVQUFBVSxDQUFDO0FBQUEsZUFBSSxDQUFDQSxDQUFDLENBQUNFLFNBQVA7QUFBQSxPQUFqQixDQUZLLENBQWYsQ0F0Q0ssQ0EwQ0w7O0FBQ0EsVUFBTXdCLElBQUksR0FBRy9ELGtEQUFFLENBQUMrRCxJQUFILEdBQ1ZDLENBRFUsQ0FDUixVQUFBM0IsQ0FBQztBQUFBLGVBQUlrQixNQUFNLENBQUN4RCxTQUFTLENBQUNzQyxDQUFDLENBQUNpQixJQUFILENBQVYsQ0FBVjtBQUFBLE9BRE8sRUFFVlcsQ0FGVSxDQUVSLFVBQUE1QixDQUFDO0FBQUEsZUFBSXVCLE1BQU0sQ0FBQ3ZCLENBQUMsQ0FBQ00sUUFBRixHQUFhTixDQUFDLENBQUNNLFFBQWYsR0FBMEIsQ0FBM0IsQ0FBVjtBQUFBLE9BRk8sQ0FBYjtBQUlBTyxPQUFDLENBQUNELFlBQUYsQ0FBZSxXQUFmLEVBQ0dFLElBREgsQ0FDUSxPQURSLEVBQ2lCLGNBRGpCLEVBRUdMLFVBRkgsQ0FFY0EsVUFGZCxFQUdHSyxJQUhILENBR1EsV0FIUixzQkFHa0NOLEtBQUssR0FBR2QsTUFBTSxDQUFDRSxLQUFmLEdBQXVCRixNQUFNLENBQUNDLElBSGhFLFVBSUdrQyxJQUpILENBSVFsRSxrREFBRSxDQUFDbUUsU0FBSCxDQUFhUCxNQUFiLEVBQXFCUSxLQUFyQixDQUEyQnhDLEtBQUssQ0FBQ2IsSUFBTixHQUFhLENBQWIsR0FBaUIsQ0FBNUMsQ0FKUjs7QUFNQSxVQUFJYSxLQUFLLENBQUNWLEtBQVYsRUFBaUI7QUFDZmdDLFNBQUMsQ0FBQ0QsWUFBRixDQUFlLFdBQWYsRUFDR0UsSUFESCxDQUNRLE9BRFIsRUFDaUIsY0FEakIsRUFFR0wsVUFGSCxDQUVjQSxVQUZkLEVBR0dLLElBSEgsQ0FHUSxXQUhSLHdCQUdvQ3ZCLEtBQUssQ0FBQ2pCLE1BQU4sR0FBZW9CLE1BQU0sQ0FBQ0ksTUFBdEIsR0FBK0JKLE1BQU0sQ0FBQ0csR0FIMUUsUUFJR2dDLElBSkgsQ0FJUWxFLGtEQUFFLENBQUNxRSxVQUFILENBQWNkLE1BQWQsRUFBc0JlLFVBQXRCLENBQWlDLENBQUNsQixRQUFRLENBQUMsQ0FBRCxDQUFULEVBQWNBLFFBQVEsQ0FBQ0EsUUFBUSxDQUFDSixNQUFULEdBQWtCLENBQW5CLENBQXRCLENBQWpDLEVBQStFdUIsVUFBL0UsQ0FBMEZyRSxVQUExRixDQUpSO0FBS0Q7O0FBRUQsVUFBSTBCLEtBQUssQ0FBQ2IsSUFBVixFQUFnQjtBQUNkLFlBQU1BLElBQUksR0FBR21DLENBQUMsQ0FBQ0QsWUFBRixDQUFlLGtCQUFmLEVBQ1Z1QixTQURVLENBQ0EsTUFEQSxFQUVWN0MsSUFGVSxDQUVMQSxJQUZLLEVBRUMsVUFBQ1UsQ0FBRCxFQUFJQyxDQUFKO0FBQUEsaUJBQVVELENBQUMsQ0FBQ2lCLElBQVo7QUFBQSxTQUZELENBQWIsQ0FEYyxDQUdtQjs7QUFFakN2QyxZQUFJLENBQUMwRCxLQUFMLEdBQWFDLE1BQWIsQ0FBb0IsTUFBcEIsRUFDR3ZCLElBREgsQ0FDUSxPQURSLEVBQ2lCLFVBQUFkLENBQUM7QUFBQSxpQ0FBYUEsQ0FBQyxDQUFDaUIsSUFBRixDQUFPcUIsT0FBUCxDQUFlLElBQWYsRUFBcUIsRUFBckIsQ0FBYjtBQUFBLFNBRGxCLEVBRUdDLEtBRkgsQ0FFUyxNQUZULEVBRWlCaEQsS0FBSyxDQUFDbEIsSUFGdkIsRUFHR3lDLElBSEgsQ0FHUSxRQUhSLEVBR2tCLFVBQUFkLENBQUM7QUFBQSxpQkFBS1QsS0FBSyxDQUFDakIsTUFBTixHQUFlb0IsTUFBTSxDQUFDRyxHQUF0QixHQUE0QkgsTUFBTSxDQUFDSSxNQUFwQyxHQUE4Q3lCLE1BQU0sQ0FBQyxDQUFDdkIsQ0FBQyxDQUFDRSxTQUFKLENBQXhEO0FBQUEsU0FIbkIsRUFJR1ksSUFKSCxDQUlRLEdBSlIsRUFJYSxVQUFDZCxDQUFELEVBQUlDLENBQUo7QUFBQSxpQkFBVWlCLE1BQU0sQ0FBQ3hELFNBQVMsQ0FBQ3NDLENBQUMsQ0FBQ2lCLElBQUgsQ0FBVixDQUFoQjtBQUFBLFNBSmIsRUFLR0gsSUFMSCxDQUtRLEdBTFIsRUFLYSxVQUFBZCxDQUFDO0FBQUEsaUJBQUl1QixNQUFNLENBQUMsQ0FBQ3ZCLENBQUMsQ0FBQ0UsU0FBSixDQUFWO0FBQUEsU0FMZCxFQU1HWSxJQU5ILENBTVEsT0FOUixFQU1pQkksTUFBTSxDQUFDc0IsU0FBUCxFQU5qQixFQU9HQyxLQVBILENBT1MvRCxJQVBULEVBUUcrQixVQVJILENBUWNBLFVBUmQsRUFTR0ssSUFUSCxDQVNRLFFBVFIsRUFTa0IsVUFBQWQsQ0FBQztBQUFBLGlCQUFLVCxLQUFLLENBQUNqQixNQUFOLEdBQWVvQixNQUFNLENBQUNHLEdBQXRCLEdBQTRCSCxNQUFNLENBQUNJLE1BQXBDLEdBQThDeUIsTUFBTSxDQUFDLENBQUN2QixDQUFDLENBQUNFLFNBQUosQ0FBeEQ7QUFBQSxTQVRuQixFQVVHWSxJQVZILENBVVEsR0FWUixFQVVhLFVBQUNkLENBQUQsRUFBSUMsQ0FBSjtBQUFBLGlCQUFVaUIsTUFBTSxDQUFDeEQsU0FBUyxDQUFDc0MsQ0FBQyxDQUFDaUIsSUFBSCxDQUFWLENBQWhCO0FBQUEsU0FWYixFQVdHSCxJQVhILENBV1EsR0FYUixFQVdhLFVBQUFkLENBQUM7QUFBQSxpQkFBSXVCLE1BQU0sQ0FBQyxDQUFDdkIsQ0FBQyxDQUFDRSxTQUFKLENBQVY7QUFBQSxTQVhkLEVBWUdZLElBWkgsQ0FZUSxPQVpSLEVBWWlCSSxNQUFNLENBQUNzQixTQUFQLEVBWmpCO0FBY0E5RCxZQUFJLENBQUNnRSxJQUFMLEdBQ0dqQyxVQURILENBQ2NBLFVBRGQsRUFFR0ssSUFGSCxDQUVRLFFBRlIsRUFFa0IsQ0FGbEIsRUFHRzZCLE1BSEg7QUFLQSxZQUFNQyxVQUFVLEdBQUcvQixDQUFDLENBQUNELFlBQUYsQ0FBZSxtQkFBZixFQUNoQnVCLFNBRGdCLENBQ04sUUFETSxFQUVoQjdDLElBRmdCLENBRVhBLElBRlcsRUFFTCxVQUFDVSxDQUFELEVBQUlDLENBQUo7QUFBQSxpQkFBVUQsQ0FBQyxDQUFDaUIsSUFBWjtBQUFBLFNBRkssQ0FBbkI7QUFJQTJCLGtCQUFVLENBQUNSLEtBQVgsR0FDR0MsTUFESCxDQUNVLE1BRFYsRUFFR0UsS0FGSCxDQUVTLE1BRlQsRUFFaUIsT0FGakIsRUFHR3pCLElBSEgsQ0FHUSxPQUhSLEVBR2lCLE9BSGpCLEVBSUd5QixLQUpILENBSVMsU0FKVCxFQUlvQixDQUpwQixFQUtHekIsSUFMSCxDQUtRLFFBTFIsRUFLa0IsVUFBQWQsQ0FBQztBQUFBLGlCQUFJVCxLQUFLLENBQUNqQixNQUFWO0FBQUEsU0FMbkIsRUFNR3dDLElBTkgsQ0FNUSxHQU5SLEVBTWEsVUFBQ2QsQ0FBRCxFQUFJQyxDQUFKO0FBQUEsaUJBQVVpQixNQUFNLENBQUN4RCxTQUFTLENBQUNzQyxDQUFDLENBQUNpQixJQUFILENBQVYsQ0FBaEI7QUFBQSxTQU5iLEVBT0dILElBUEgsQ0FPUSxHQVBSLEVBT2EsVUFBQWQsQ0FBQztBQUFBLGlCQUFJLENBQUo7QUFBQSxTQVBkLEVBUUdjLElBUkgsQ0FRUSxPQVJSLEVBUWlCSSxNQUFNLENBQUNzQixTQUFQLEVBUmpCLEVBU0dLLEVBVEgsQ0FTTSxXQVROLEVBU21CQyxXQVRuQixFQVVHRCxFQVZILENBVU0sVUFWTixFQVVrQkUsV0FWbEIsRUFXR04sS0FYSCxDQVdTRyxVQVhULEVBWUduQyxVQVpILENBWWNBLFVBWmQsRUFhR0ssSUFiSCxDQWFRLFFBYlIsRUFha0IsVUFBQWQsQ0FBQztBQUFBLGlCQUFJVCxLQUFLLENBQUNqQixNQUFWO0FBQUEsU0FibkIsRUFjR3dDLElBZEgsQ0FjUSxHQWRSLEVBY2EsVUFBQ2QsQ0FBRCxFQUFJQyxDQUFKO0FBQUEsaUJBQVVpQixNQUFNLENBQUN4RCxTQUFTLENBQUNzQyxDQUFDLENBQUNpQixJQUFILENBQVYsQ0FBaEI7QUFBQSxTQWRiLEVBZUdILElBZkgsQ0FlUSxHQWZSLEVBZWEsVUFBQWQsQ0FBQztBQUFBLGlCQUFJLENBQUo7QUFBQSxTQWZkLEVBZ0JHYyxJQWhCSCxDQWdCUSxPQWhCUixFQWdCaUJJLE1BQU0sQ0FBQ3NCLFNBQVAsRUFoQmpCO0FBa0JBSSxrQkFBVSxDQUFDRixJQUFYLEdBQ0dqQyxVQURILENBQ2NBLFVBRGQsRUFFR0ssSUFGSCxDQUVRLFFBRlIsRUFFa0IsQ0FGbEIsRUFHRzZCLE1BSEg7QUFLQUMsa0JBQVUsQ0FBQ0MsRUFBWCxDQUFjLFdBQWQsRUFBMkJDLFdBQTNCLEVBQ0dELEVBREgsQ0FDTSxVQUROLEVBQ2tCRSxXQURsQjtBQUVELE9BbEhJLENBb0hMOzs7QUFDQSxVQUFNQyxRQUFRLEdBQUduQyxDQUFDLENBQUNzQixTQUFGLENBQVksV0FBWixFQUNkN0MsSUFEYyxDQUNULENBQUNBLElBQUQsQ0FEUyxDQUFqQjtBQUdBMEQsY0FBUSxDQUFDWixLQUFULEdBQ0dDLE1BREgsQ0FDVSxNQURWLEVBRUd2QixJQUZILENBRVEsT0FGUixFQUVpQixVQUZqQixFQUdHMkIsS0FISCxDQUdTTyxRQUhULEVBSUd2QyxVQUpILENBSWNBLFVBSmQsRUFLR0ssSUFMSCxDQUtRLEdBTFIsRUFLYVksSUFMYixFQU1HWixJQU5ILENBTVEsTUFOUixFQU1nQixNQU5oQixFQU9HQSxJQVBILENBT1EsUUFQUixFQU9rQnZCLEtBQUssQ0FBQ3BCLE1BUHhCLEVBUUcyQyxJQVJILENBUVEsY0FSUixFQVF3QnZCLEtBQUssQ0FBQ25CLFdBUjlCLEVBeEhLLENBa0lMOztBQUNBLFVBQUltQixLQUFLLENBQUNYLE1BQVYsRUFBa0I7QUFDaEIsWUFBTXFFLGVBQWUsR0FBR3BDLENBQUMsQ0FBQ0QsWUFBRixDQUFlLFVBQWYsQ0FBeEIsQ0FEZ0IsQ0FHaEI7O0FBQ0EsWUFBTXNDLFNBQVMsR0FBR0QsZUFBZSxDQUFDckMsWUFBaEIsQ0FBNkIsYUFBN0IsRUFDZkUsSUFEZSxDQUNWLFdBRFUsc0JBQ2dCSSxNQUFNLENBQUN4RCxTQUFTLENBQUM0QixJQUFJLENBQUMsRUFBRCxDQUFKLENBQVMyQixJQUFWLENBQVYsQ0FEdEIsY0FDb0RNLE1BQU0sQ0FBQ2pDLElBQUksQ0FBQyxFQUFELENBQUosQ0FBU2dCLFFBQVYsQ0FBTixHQUE0QmYsS0FBSyxDQUFDakIsTUFBTixHQUFlLEVBRC9GLE9BQWxCO0FBR0E0RSxpQkFBUyxDQUFDdEMsWUFBVixDQUF1QixNQUF2QixFQUNHRSxJQURILENBQ1EsSUFEUixFQUNjLENBRGQsRUFFR0EsSUFGSCxDQUVRLElBRlIsRUFFYyxDQUZkLEVBR0dBLElBSEgsQ0FHUSxJQUhSLEVBR2N2QixLQUFLLENBQUNqQixNQUFOLEdBQWUsRUFIN0IsRUFJR3dDLElBSkgsQ0FJUSxJQUpSLEVBSWMsQ0FKZDtBQU1Bb0MsaUJBQVMsQ0FBQ3RDLFlBQVYsQ0FBdUIsTUFBdkIsRUFDR0UsSUFESCxDQUNRLElBRFIsRUFDYyxDQUFDLEVBRGYsRUFFR0EsSUFGSCxDQUVRLElBRlIsRUFFYyxDQUFDLENBRmYsRUFHRzlCLElBSEgsQ0FHUW1FLCtDQUFRLENBQUNDLE1BQVQsQ0FBZ0I3RCxLQUFLLENBQUNQLElBQU4sQ0FBV0csR0FBM0IsRUFBZ0M7QUFBRWtFLGlCQUFPLEVBQUU5RCxLQUFLLENBQUNoQjtBQUFqQixTQUFoQyxDQUhSLEVBYmdCLENBa0JoQjtBQUVBOztBQUVBLFlBQU0rRSxHQUFHLEdBQUczRixrREFBRSxDQUFDMkYsR0FBSCxDQUFPaEUsSUFBUCxFQUFhLFVBQUFVLENBQUM7QUFBQSxpQkFBSUEsQ0FBQyxDQUFDRSxTQUFOO0FBQUEsU0FBZCxDQUFaO0FBQ0EsWUFBTXFELE9BQU8sR0FBR2pFLElBQUksQ0FBQ2tFLE1BQUwsQ0FBWSxVQUFBeEQsQ0FBQztBQUFBLGlCQUFJQSxDQUFDLENBQUNFLFNBQUYsSUFBZW9ELEdBQW5CO0FBQUEsU0FBYixFQUFxQyxDQUFyQyxDQUFoQjtBQUNBLFlBQU1HLGFBQWEsR0FBR1IsZUFBZSxDQUFDckMsWUFBaEIsQ0FBNkIsaUJBQTdCLEVBQ25CRSxJQURtQixDQUNkLFdBRGMsc0JBQ1lJLE1BQU0sQ0FBQ3hELFNBQVMsQ0FBQzZGLE9BQU8sQ0FBQ3RDLElBQVQsQ0FBVixDQURsQixjQUMrQ00sTUFBTSxDQUFDZ0MsT0FBTyxDQUFDckQsU0FBVCxDQURyRCxPQUF0QjtBQUdBdUQscUJBQWEsQ0FBQzdDLFlBQWQsQ0FBMkIsTUFBM0IsRUFDR0UsSUFESCxDQUNRLElBRFIsRUFDYyxDQUFDLEVBRGYsRUFFR0EsSUFGSCxDQUVRLElBRlIsRUFFYyxDQUZkLEVBR0dBLElBSEgsQ0FHUSxJQUhSLEVBR2MsRUFIZCxFQUlHQSxJQUpILENBSVEsSUFKUixFQUljLEVBSmQ7QUFNQTJDLHFCQUFhLENBQUM3QyxZQUFkLENBQTJCLE1BQTNCLEVBQ0cyQixLQURILENBQ1MsYUFEVCxFQUN3QixLQUR4QixFQUVHekIsSUFGSCxDQUVRLElBRlIsRUFFYyxDQUFDLEVBRmYsRUFHR0EsSUFISCxDQUdRLElBSFIsRUFHYyxFQUhkLEVBSUc5QixJQUpILFdBSVdPLEtBQUssQ0FBQ1AsSUFBTixDQUFXQyxhQUFYLEdBQTJCTSxLQUFLLENBQUNULGFBSjVDO0FBS0QsT0F6S0ksQ0EwS0w7OztBQUNBLFVBQU00RSxVQUFVLEdBQUcsS0FBS2pFLFNBQUwsR0FDaEJtQixZQURnQixDQUNILG9CQURHLENBQW5CO0FBR0EsVUFBTStDLFFBQVEsR0FBR0QsVUFBVSxDQUFDOUMsWUFBWCxDQUF3QixtQkFBeEIsQ0FBakI7O0FBRUEsZUFBU2tDLFdBQVQsQ0FBcUJjLEdBQXJCLEVBQTBCO0FBQ3hCLFlBQU1DLGdCQUFnQixHQUFHdEUsS0FBSyxDQUFDZCxVQUFOLEdBQW1CYyxLQUFLLENBQUNQLElBQU4sQ0FBV0ksaUJBQTlCLEdBQWtELEVBQTNFO0FBQ0EsWUFBTTBFLGNBQWMsR0FBR3ZFLEtBQUssQ0FBQ2QsVUFBTixHQUFtQjJDLGtEQUFuQixHQUEyQnBELGVBQWxEO0FBQ0E2QyxTQUFDLENBQUNrRCxNQUFGLGtCQUFtQkgsR0FBRyxDQUFDM0MsSUFBSixDQUFTcUIsT0FBVCxDQUFpQixJQUFqQixFQUF1QixFQUF2QixDQUFuQixHQUNHMEIsT0FESCxDQUNXLFFBRFgsRUFDcUIsSUFEckI7QUFHQSxZQUFNQyxNQUFNLEdBQUcsRUFBZjtBQUVBQSxjQUFNLENBQUMsQ0FBRCxDQUFOLEdBQVkvQyxNQUFNLENBQUN4RCxTQUFTLENBQUNrRyxHQUFHLENBQUMzQyxJQUFMLENBQVYsQ0FBTixHQUE4QnZCLE1BQU0sQ0FBQ0MsSUFBckMsR0FBNkN1QixNQUFNLENBQUNzQixTQUFQLEtBQXFCLENBQTlFO0FBQ0F5QixjQUFNLENBQUMsQ0FBRCxDQUFOLEdBQVkxQyxNQUFNLENBQUNxQyxHQUFHLENBQUMxRCxTQUFMLENBQU4sR0FBd0JSLE1BQU0sQ0FBQ0csR0FBM0M7QUFFQSxZQUFNcUUsQ0FBQyxHQUFHQyxjQUFjLENBQUNGLE1BQUQsRUFBUyxDQUFDMUUsS0FBSyxDQUFDakIsTUFBUCxFQUFla0MsS0FBZixDQUFULENBQXhCO0FBRUFrRCxrQkFBVSxDQUFDTSxPQUFYLENBQW1CLGdCQUFuQixFQUFxQyxJQUFyQyxFQUNHQSxPQURILENBQ1csaUVBRFgsRUFDOEUsS0FEOUUsRUFFR3pCLEtBRkgsQ0FFUyxNQUZULFlBRW9CMEIsTUFBTSxDQUFDLENBQUQsQ0FGMUIsU0FHRzFCLEtBSEgsQ0FHUyxLQUhULFlBR21CMEIsTUFBTSxDQUFDLENBQUQsQ0FIekIsU0FJR0QsT0FKSCxtQkFJc0JFLENBSnRCLEdBSTJCLElBSjNCO0FBTUFQLGdCQUFRLENBQUMvQyxZQUFULENBQXNCLGVBQXRCLEVBQ0c1QixJQURILENBQ1FqQixhQUFhLENBQUNMLFNBQVMsQ0FBQ2tHLEdBQUcsQ0FBQzNDLElBQUwsQ0FBVixDQURyQjtBQUdBMEMsZ0JBQVEsQ0FBQy9DLFlBQVQsQ0FBc0IsWUFBdEIsRUFDRzVCLElBREgsQ0FDUThFLGNBQWMsQ0FBQ0YsR0FBRyxDQUFDMUQsU0FBTCxDQUFkLEdBQWdDWCxLQUFLLENBQUNQLElBQU4sQ0FBV0UsY0FBM0MsR0FBNERLLEtBQUssQ0FBQ1QsYUFBbEUsR0FBa0YrRSxnQkFEMUY7QUFFRDs7QUFFRCxlQUFTZCxXQUFULEdBQXVCO0FBQ3JCbEMsU0FBQyxDQUFDa0QsTUFBRixDQUFTLGFBQVQsRUFDR0MsT0FESCxDQUNXLFFBRFgsRUFDcUIsS0FEckI7QUFHQU4sa0JBQVUsQ0FBQ00sT0FBWCxDQUFtQixnQkFBbkIsRUFBcUMsS0FBckM7QUFDRDs7QUFFRCxlQUFTRyxjQUFULENBQXdCRixNQUF4QixFQUFnQ0csSUFBaEMsRUFBc0M7QUFDcEMsWUFBTUMsQ0FBQyxHQUFHLEVBQVY7QUFFQSxZQUFNQyxZQUFZLEdBQUdGLElBQUksQ0FBQyxDQUFELENBQUosR0FBVSxHQUFWLEdBQWdCLENBQWhCLEdBQW9CLENBQXpDOztBQUVBLFlBQUlILE1BQU0sQ0FBQyxDQUFELENBQU4sR0FBWUcsSUFBSSxDQUFDLENBQUQsQ0FBSixHQUFVRSxZQUExQixFQUF3QztBQUN0Q0QsV0FBQyxDQUFDRSxJQUFGLENBQU8sR0FBUDtBQUNELFNBRkQsTUFFTztBQUNMRixXQUFDLENBQUNFLElBQUYsQ0FBTyxHQUFQO0FBQ0Q7O0FBRUQsWUFBSU4sTUFBTSxDQUFDLENBQUQsQ0FBTixHQUFZRyxJQUFJLENBQUMsQ0FBRCxDQUFKLEdBQVUsQ0FBMUIsRUFBNkI7QUFDM0JDLFdBQUMsQ0FBQ0UsSUFBRixDQUFPLEdBQVA7QUFDRDs7QUFFRCxZQUFJTixNQUFNLENBQUMsQ0FBRCxDQUFOLEdBQVlHLElBQUksQ0FBQyxDQUFELENBQUosR0FBVSxDQUExQixFQUE2QjtBQUMzQkMsV0FBQyxDQUFDRSxJQUFGLENBQU8sR0FBUDtBQUNEOztBQUVELGVBQU9GLENBQUMsQ0FBQ0csSUFBRixDQUFPLEVBQVAsQ0FBUDtBQUNELE9Bck9JLENBdU9MO0FBQ0E7OztBQUNBLFVBQU1DLGdCQUFnQixHQUFHLENBQUMsQ0FBQzVELENBQUMsQ0FBQ3NCLFNBQUYsQ0FBWSx5QkFBWixFQUF1QzNDLElBQXZDLEVBQTNCO0FBRUFELFdBQUssQ0FBQ2YsV0FBTixHQUFvQmUsS0FBSyxDQUFDZixXQUFOLENBQWtCZ0YsTUFBbEIsQ0FBeUIsVUFBU3hELENBQVQsRUFBWTtBQUN2RCxZQUFJa0IsTUFBTSxDQUFDeEQsU0FBUyxDQUFDc0MsQ0FBQyxDQUFDaUIsSUFBSCxDQUFWLENBQU4sSUFBNkJqQixDQUFDLENBQUNoQixJQUFGLENBQU8yQixNQUFQLEdBQWdCLENBQWpELEVBQW9EO0FBQ2xELGlCQUFPWCxDQUFQO0FBQ0Q7QUFDRixPQUptQixDQUFwQjs7QUFNQSxVQUFJVCxLQUFLLENBQUNmLFdBQU4sQ0FBa0JtQyxNQUFsQixHQUEyQixDQUEzQixJQUFnQzhELGdCQUFwQyxFQUFzRDtBQUNwRCxZQUFNQyxxQkFBcUIsR0FBRzdELENBQUMsQ0FBQ0QsWUFBRixDQUFlLHlCQUFmLEVBQzNCdUIsU0FEMkIsQ0FDakIsYUFEaUIsRUFFM0I3QyxJQUYyQixDQUV0QkMsS0FBSyxDQUFDZixXQUZnQixFQUVILFVBQUN3QixDQUFELEVBQUlDLENBQUo7QUFBQSxpQkFBVUQsQ0FBQyxDQUFDaUIsSUFBWjtBQUFBLFNBRkcsQ0FBOUI7QUFJQSxZQUFNMEQsVUFBVSxHQUFHRCxxQkFBcUIsQ0FBQ3RDLEtBQXRCLEdBQ2hCQyxNQURnQixDQUNULEdBRFMsRUFFaEJ2QixJQUZnQixDQUVYLE9BRlcsRUFFRixVQUFBZCxDQUFDO0FBQUEsaUJBQUlBLENBQUMsU0FBRCx3QkFBd0JBLENBQUMsU0FBekIsSUFBb0MsWUFBeEM7QUFBQSxTQUZDLEVBR2hCYyxJQUhnQixDQUdYLFdBSFcsRUFHRSxVQUFBZCxDQUFDO0FBQUEscUNBQWlCa0IsTUFBTSxDQUFDeEQsU0FBUyxDQUFDc0MsQ0FBQyxDQUFDaUIsSUFBSCxDQUFWLENBQXZCO0FBQUEsU0FISCxDQUFuQjtBQUtBeUQsNkJBQXFCLENBQUNqQyxLQUF0QixDQUE0QmlDLHFCQUE1QixFQUNHakUsVUFESCxDQUNjQSxVQURkLEVBRUdLLElBRkgsQ0FFUSxXQUZSLEVBRXFCLFVBQUFkLENBQUM7QUFBQSxxQ0FBaUJrQixNQUFNLENBQUN4RCxTQUFTLENBQUNzQyxDQUFDLENBQUNpQixJQUFILENBQVYsQ0FBdkI7QUFBQSxTQUZ0QjtBQUlBMEQsa0JBQVUsQ0FBQy9ELFlBQVgsQ0FBd0IsTUFBeEIsRUFDR0UsSUFESCxDQUNRLElBRFIsRUFDYyxDQURkLEVBRUdBLElBRkgsQ0FFUSxJQUZSLEVBRWMsQ0FGZCxFQUdHQSxJQUhILENBR1EsSUFIUixFQUdjLFVBQVNkLENBQVQsRUFBWTtBQUN0QixjQUFJa0IsTUFBTSxDQUFDeEQsU0FBUyxDQUFDc0MsQ0FBQyxDQUFDaUIsSUFBSCxDQUFWLENBQU4sR0FBNkJULEtBQUssR0FBRyxDQUF6QyxFQUE2QztBQUMzQyxtQkFBT2pCLEtBQUssQ0FBQ2pCLE1BQU4sR0FBZSxDQUFmLEdBQW1CLEdBQW5CLEdBQXlCLEVBQWhDO0FBQ0QsV0FGRCxNQUVPO0FBQ0wsbUJBQU9pQixLQUFLLENBQUNqQixNQUFOLEdBQWUsQ0FBZixHQUFtQixDQUFuQixHQUF1QixFQUE5QjtBQUNEO0FBQ0YsU0FUSCxFQVVHd0MsSUFWSCxDQVVRLElBVlIsRUFVY3ZCLEtBQUssQ0FBQ2pCLE1BQU4sR0FBZW9CLE1BQU0sQ0FBQ0csR0FBdEIsR0FBNEJILE1BQU0sQ0FBQ0ksTUFWakQ7QUFZQSxZQUFNOEUsY0FBYyxHQUFHRCxVQUFVLENBQUMvRCxZQUFYLENBQXdCLGtCQUF4QixFQUNwQkUsSUFEb0IsQ0FDZixXQURlLEVBQ0YsVUFBU2QsQ0FBVCxFQUFZO0FBQzdCLGNBQUlrQixNQUFNLENBQUN4RCxTQUFTLENBQUNzQyxDQUFDLENBQUNpQixJQUFILENBQVYsQ0FBTixHQUE2QlQsS0FBSyxHQUFHLENBQXpDLEVBQTZDO0FBQzNDLDBDQUF1QmpCLEtBQUssQ0FBQ2pCLE1BQU4sR0FBZSxDQUFmLEdBQW1CLEdBQTFDO0FBQ0QsV0FGRCxNQUVPO0FBQ0wseUNBQXNCaUIsS0FBSyxDQUFDakIsTUFBTixHQUFlLENBQWYsR0FBbUIsQ0FBekM7QUFDRDtBQUNGLFNBUG9CLEVBUXBCd0MsSUFSb0IsQ0FRZixhQVJlLEVBUUEsVUFBU2QsQ0FBVCxFQUFZO0FBQy9CLGNBQUlrQixNQUFNLENBQUN4RCxTQUFTLENBQUNzQyxDQUFDLENBQUNpQixJQUFILENBQVYsQ0FBTixHQUE2QlQsS0FBSyxHQUFHLENBQXpDLEVBQTZDO0FBQzNDLG1CQUFPLEtBQVA7QUFDRCxXQUZELE1BRU87QUFDTCxtQkFBTyxPQUFQO0FBQ0Q7QUFDRixTQWRvQixDQUF2QjtBQWdCQW9FLHNCQUFjLENBQUNoRSxZQUFmLENBQTRCLFdBQTVCLEVBQ0c1QixJQURILENBQ1EsVUFBQWdCLENBQUM7QUFBQSxpQkFBSWpDLGFBQWEsQ0FBQ0wsU0FBUyxDQUFDc0MsQ0FBQyxDQUFDaUIsSUFBSCxDQUFWLENBQWpCO0FBQUEsU0FEVDtBQUdBMkQsc0JBQWMsQ0FBQ2hFLFlBQWYsQ0FBNEIsV0FBNUIsRUFDR0UsSUFESCxDQUNRLElBRFIsRUFDYyxFQURkLEVBRUc5QixJQUZILENBRVEsVUFBQWdCLENBQUM7QUFBQSxpQkFBSUEsQ0FBQyxDQUFDaEIsSUFBTjtBQUFBLFNBRlQ7QUFJQTBGLDZCQUFxQixDQUFDaEMsSUFBdEIsR0FDR0MsTUFESDtBQUVEOztBQUVELGFBQU8sSUFBUDtBQUNEOzs7O0VBalV5QmtDLDREOztBQW9VYjNHLDRFQUFmIiwiZmlsZSI6Ii4vc3JjL2xpYi9jaGFydC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldERhdGVzLCByb3VuZCB9IGZyb20gJy4vdXRpbHMvdXRpbHMnO1xuXG5pbXBvcnQgQ2hhcnRDb21wb25lbnQgZnJvbSAnLi9iYXNlL0NoYXJ0Q29tcG9uZW50JztcbmltcG9ydCBNdXN0YWNoZSBmcm9tICdtdXN0YWNoZSc7XG5pbXBvcnQgZDMgZnJvbSAnLi91dGlscy9kMyc7XG5cbi8vIGltcG9ydCBkZWZhdWx0RGF0YSBmcm9tICcuL2RlZmF1bHREYXRhLmpzb24nO1xuXG5jb25zdCBkYXRlUGFyc2UgPSBkMy50aW1lUGFyc2UoJyVZLSVtLSVkJyk7XG5jb25zdCBkYXRlRm9ybWF0ID0gZDMudGltZUZvcm1hdCgnJWIgJWUnKTtcbmNvbnN0IGRhdGVGb3JtYXRfdHQgPSBkMy50aW1lRm9ybWF0KCclQiAlZScpO1xuY29uc3QgbnVtYmVyRm9ybWF0X3R0ID0gZDMuZm9ybWF0KCcsJyk7XG5cbmNsYXNzIFdlZWtseUF2ZXJhZ2UgZXh0ZW5kcyBDaGFydENvbXBvbmVudCB7XG4gIGRlZmF1bHRQcm9wcyA9IHtcbiAgICBzdHJva2U6ICdzdGVlbGJsdWUnLFxuICAgIHN0cm9rZVdpZHRoOiAyLjUsXG4gICAgZmlsbDogJyNlZWUnLFxuICAgIGhlaWdodDogMjAwLFxuICAgIGF2Z19kYXlzOiA3LFxuICAgIGFubm90YXRpb25zOiBbXSxcbiAgICBwb3B1bGF0aW9uOiBmYWxzZSxcbiAgICBiYXJzOiB0cnVlLFxuICAgIHBhZGRpbmc6IDAsXG4gICAgbGFiZWxzOiBmYWxzZSxcbiAgICB4YXhpczogdHJ1ZSxcbiAgICB2YXJpYWJsZV9uYW1lOiAnY2FzZXMnLFxuICAgIGRhdGVfcmFuZ2U6IGZhbHNlLFxuICAgIHRleHQ6IHtcbiAgICAgIGRhaWx5X251bWJlcnM6ICdEYWlseSBuZXcgJyxcbiAgICAgIHRvb2x0aXBfc3VmZml4OiAnIG5ldyAnLFxuICAgICAgYXZnOiAne3sgYXZlcmFnZSB9fS1kYXkgYXZlcmFnZScsXG4gICAgICBwZXJfcG9wX3R0X3N1ZmZpeDogJyBwZXIgMTAwayBwZW9wbGUgaW4gdGhlIHBvcHVsYXRpb24nLFxuICAgICAgc3ViaGVkOicnXG4gICAgfSxcbiAgfTtcblxuICBkZWZhdWx0RGF0YSA9IFtdO1xuXG4gIGRyYXcoKSB7XG4gICAgY29uc3QgZGF0YSA9IHRoaXMuZGF0YSgpO1xuICAgIGNvbnN0IHByb3BzID0gdGhpcy5wcm9wcygpO1xuICAgIGNvbnN0IG5vZGUgPSB0aGlzLnNlbGVjdGlvbigpLm5vZGUoKTtcbiAgICBjb25zdCBtYXJnaW4gPSB7IGxlZnQ6IDIwLCByaWdodDogNTAsIHRvcDogMTAsIGJvdHRvbTogMzAgfTtcblxuICAgIGRhdGEuZm9yRWFjaChmdW5jdGlvbihkLCBpKSB7XG4gICAgICBkLnVzZV9jb3VudCA9IChwcm9wcy5wb3B1bGF0aW9uKSA/IChkLmNvdW50IC8gcHJvcHMucG9wdWxhdGlvbiAqIDEwMDAwMCkgOiBkLmNvdW50O1xuICAgICAgZC5tZWFuID0gZDMubWVhbihkYXRhLnNsaWNlKChpIC0gcHJvcHMuYXZnX2RheXMpLCBpKSwgZCA9PiArZC5jb3VudCk7IC8vIGF2ZyBjYWxjXG4gICAgICBkLnVzZV9tZWFuID0gKHByb3BzLnBvcHVsYXRpb24pID8gKGQubWVhbiAvIHByb3BzLnBvcHVsYXRpb24gKiAxMDAwMDApIDogZC5tZWFuO1xuICAgIH0pO1xuXG4gICAgY29uc3QgeyB3aWR0aCB9ID0gbm9kZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICBjb25zdCB0cmFuc2l0aW9uID0gZDMudHJhbnNpdGlvbigpXG4gICAgICAuZHVyYXRpb24oNzUwKTtcblxuICAgIGlmIChwcm9wcy50ZXh0LnN1YmhlZC5sZW5ndGg+MCl7XG4gICAgICB0aGlzLnNlbGVjdGlvbigpXG4gICAgICAgICAgLmFwcGVuZFNlbGVjdCgncC5zdWJoZWQnKVxuICAgICAgICAgIC50ZXh0KHByb3BzLnRleHQuc3ViaGVkKVxuICAgIH1cbiAgICBjb25zdCBnID0gdGhpcy5zZWxlY3Rpb24oKVxuICAgICAgLmFwcGVuZFNlbGVjdCgnc3ZnJykgLy8gc2VlIGRvY3MgaW4gLi91dGlscy9kMy5qc1xuICAgICAgLmF0dHIoJ3dpZHRoJywgd2lkdGgpXG4gICAgICAuYXR0cignaGVpZ2h0JywgcHJvcHMuaGVpZ2h0KVxuICAgICAgLmFwcGVuZFNlbGVjdCgnZycpXG4gICAgICAuYXR0cigndHJhbnNmb3JtJywgYHRyYW5zbGF0ZSgke21hcmdpbi5sZWZ0fSwgJHttYXJnaW4udG9wfSlgKTtcblxuICAgIGNvbnN0IGRhdGVMaXN0ID0gZ2V0RGF0ZXMoZGF0ZVBhcnNlKGRhdGFbMF0uZGF0ZSksIGRhdGVQYXJzZShkYXRhW2RhdGEubGVuZ3RoIC0gMV0uZGF0ZSkpOyAvLyBuZWVkcyByZXdvcmtpbmdcblxuICAgIC8vIHggc2NhbGVcbiAgICBjb25zdCBzY2FsZVggPSBkMy5zY2FsZUJhbmQoKVxuICAgICAgLnJvdW5kKGZhbHNlKVxuICAgICAgLnJhbmdlKFswLCB3aWR0aCAtIG1hcmdpbi5yaWdodCAtIG1hcmdpbi5sZWZ0XSlcbiAgICAgIC5kb21haW4oZGF0ZUxpc3QpXG4gICAgICAucGFkZGluZyhwcm9wcy5wYWRkaW5nKTtcblxuICAgIC8vIHkgc2NhbGVcbiAgICBjb25zdCBzY2FsZVkgPSBkMy5zY2FsZUxpbmVhcigpXG4gICAgICAucmFuZ2UoW3Byb3BzLmhlaWdodCAtIG1hcmdpbi5ib3R0b20gLSBtYXJnaW4udG9wLCAwXSlcbiAgICAgIC5kb21haW4oZDMuZXh0ZW50KGRhdGEsIGQgPT4gK2QudXNlX2NvdW50KSk7XG5cbiAgICAvLyBsaW5lXG4gICAgY29uc3QgbGluZSA9IGQzLmxpbmUoKVxuICAgICAgLngoZCA9PiBzY2FsZVgoZGF0ZVBhcnNlKGQuZGF0ZSkpKVxuICAgICAgLnkoZCA9PiBzY2FsZVkoZC51c2VfbWVhbiA/IGQudXNlX21lYW4gOiAwKSk7XG5cbiAgICBnLmFwcGVuZFNlbGVjdCgnZy5heGlzLS15JylcbiAgICAgIC5hdHRyKCdjbGFzcycsICdheGlzLS15IGF4aXMnKVxuICAgICAgLnRyYW5zaXRpb24odHJhbnNpdGlvbilcbiAgICAgIC5hdHRyKCd0cmFuc2Zvcm0nLCBgdHJhbnNsYXRlKCR7d2lkdGggLSBtYXJnaW4ucmlnaHQgLSBtYXJnaW4ubGVmdH0sMClgKVxuICAgICAgLmNhbGwoZDMuYXhpc1JpZ2h0KHNjYWxlWSkudGlja3MocHJvcHMuYmFycyA/IDMgOiAxKSk7XG5cbiAgICBpZiAocHJvcHMueGF4aXMpIHtcbiAgICAgIGcuYXBwZW5kU2VsZWN0KCdnLmF4aXMtLXgnKVxuICAgICAgICAuYXR0cignY2xhc3MnLCAnYXhpcy0teCBheGlzJylcbiAgICAgICAgLnRyYW5zaXRpb24odHJhbnNpdGlvbilcbiAgICAgICAgLmF0dHIoJ3RyYW5zZm9ybScsIGB0cmFuc2xhdGUoMCwke3Byb3BzLmhlaWdodCAtIG1hcmdpbi5ib3R0b20gLSBtYXJnaW4udG9wfSlgKVxuICAgICAgICAuY2FsbChkMy5heGlzQm90dG9tKHNjYWxlWCkudGlja1ZhbHVlcyhbZGF0ZUxpc3RbMF0sIGRhdGVMaXN0W2RhdGVMaXN0Lmxlbmd0aCAtIDFdXSkudGlja0Zvcm1hdChkYXRlRm9ybWF0KSk7XG4gICAgfVxuXG4gICAgaWYgKHByb3BzLmJhcnMpIHtcbiAgICAgIGNvbnN0IGJhcnMgPSBnLmFwcGVuZFNlbGVjdCgnZy5iYXJzLWNvbnRhaW5lcicpXG4gICAgICAgIC5zZWxlY3RBbGwoJy5iYXInKVxuICAgICAgICAuZGF0YShkYXRhLCAoZCwgaSkgPT4gZC5kYXRlKTsgLy8gZm9yIHNtb290aCBkYXRhIHVwZGF0aW9uXG5cbiAgICAgIGJhcnMuZW50ZXIoKS5hcHBlbmQoJ3JlY3QnKVxuICAgICAgICAuYXR0cignY2xhc3MnLCBkID0+IGBiYXIgZC0ke2QuZGF0ZS5yZXBsYWNlKC8tL2csICcnKX1gKVxuICAgICAgICAuc3R5bGUoJ2ZpbGwnLCBwcm9wcy5maWxsKVxuICAgICAgICAuYXR0cignaGVpZ2h0JywgZCA9PiAocHJvcHMuaGVpZ2h0IC0gbWFyZ2luLnRvcCAtIG1hcmdpbi5ib3R0b20pIC0gc2NhbGVZKCtkLnVzZV9jb3VudCkpXG4gICAgICAgIC5hdHRyKCd4JywgKGQsIGkpID0+IHNjYWxlWChkYXRlUGFyc2UoZC5kYXRlKSkpXG4gICAgICAgIC5hdHRyKCd5JywgZCA9PiBzY2FsZVkoK2QudXNlX2NvdW50KSlcbiAgICAgICAgLmF0dHIoJ3dpZHRoJywgc2NhbGVYLmJhbmR3aWR0aCgpKVxuICAgICAgICAubWVyZ2UoYmFycylcbiAgICAgICAgLnRyYW5zaXRpb24odHJhbnNpdGlvbilcbiAgICAgICAgLmF0dHIoJ2hlaWdodCcsIGQgPT4gKHByb3BzLmhlaWdodCAtIG1hcmdpbi50b3AgLSBtYXJnaW4uYm90dG9tKSAtIHNjYWxlWSgrZC51c2VfY291bnQpKVxuICAgICAgICAuYXR0cigneCcsIChkLCBpKSA9PiBzY2FsZVgoZGF0ZVBhcnNlKGQuZGF0ZSkpKVxuICAgICAgICAuYXR0cigneScsIGQgPT4gc2NhbGVZKCtkLnVzZV9jb3VudCkpXG4gICAgICAgIC5hdHRyKCd3aWR0aCcsIHNjYWxlWC5iYW5kd2lkdGgoKSk7XG5cbiAgICAgIGJhcnMuZXhpdCgpXG4gICAgICAgIC50cmFuc2l0aW9uKHRyYW5zaXRpb24pXG4gICAgICAgIC5hdHRyKCdoZWlnaHQnLCAwKVxuICAgICAgICAucmVtb3ZlKCk7XG5cbiAgICAgIGNvbnN0IGJhcnNfZHVtbXkgPSBnLmFwcGVuZFNlbGVjdCgnZy5kdW1teS1jb250YWluZXInKVxuICAgICAgICAuc2VsZWN0QWxsKCcuZHVtbXknKVxuICAgICAgICAuZGF0YShkYXRhLCAoZCwgaSkgPT4gZC5kYXRlKTtcblxuICAgICAgYmFyc19kdW1teS5lbnRlcigpXG4gICAgICAgIC5hcHBlbmQoJ3JlY3QnKVxuICAgICAgICAuc3R5bGUoJ2ZpbGwnLCAnd2hpdGUnKVxuICAgICAgICAuYXR0cignY2xhc3MnLCAnZHVtbXknKVxuICAgICAgICAuc3R5bGUoJ29wYWNpdHknLCAwKVxuICAgICAgICAuYXR0cignaGVpZ2h0JywgZCA9PiBwcm9wcy5oZWlnaHQpXG4gICAgICAgIC5hdHRyKCd4JywgKGQsIGkpID0+IHNjYWxlWChkYXRlUGFyc2UoZC5kYXRlKSkpXG4gICAgICAgIC5hdHRyKCd5JywgZCA9PiAwKVxuICAgICAgICAuYXR0cignd2lkdGgnLCBzY2FsZVguYmFuZHdpZHRoKCkpXG4gICAgICAgIC5vbignbW91c2VvdmVyJywgc2hvd1Rvb2x0aXApXG4gICAgICAgIC5vbignbW91c2VvdXQnLCBoaWRlVG9vbHRpcClcbiAgICAgICAgLm1lcmdlKGJhcnNfZHVtbXkpXG4gICAgICAgIC50cmFuc2l0aW9uKHRyYW5zaXRpb24pXG4gICAgICAgIC5hdHRyKCdoZWlnaHQnLCBkID0+IHByb3BzLmhlaWdodClcbiAgICAgICAgLmF0dHIoJ3gnLCAoZCwgaSkgPT4gc2NhbGVYKGRhdGVQYXJzZShkLmRhdGUpKSlcbiAgICAgICAgLmF0dHIoJ3knLCBkID0+IDApXG4gICAgICAgIC5hdHRyKCd3aWR0aCcsIHNjYWxlWC5iYW5kd2lkdGgoKSk7XG5cbiAgICAgIGJhcnNfZHVtbXkuZXhpdCgpXG4gICAgICAgIC50cmFuc2l0aW9uKHRyYW5zaXRpb24pXG4gICAgICAgIC5hdHRyKCdoZWlnaHQnLCAwKVxuICAgICAgICAucmVtb3ZlKCk7XG5cbiAgICAgIGJhcnNfZHVtbXkub24oJ21vdXNlb3ZlcicsIHNob3dUb29sdGlwKVxuICAgICAgICAub24oJ21vdXNlb3V0JywgaGlkZVRvb2x0aXApO1xuICAgIH1cblxuICAgIC8vIGF2ZyBsaW5lXG4gICAgY29uc3QgYXZnX2xpbmUgPSBnLnNlbGVjdEFsbCgnLmF2Zy1saW5lJylcbiAgICAgIC5kYXRhKFtkYXRhXSk7XG5cbiAgICBhdmdfbGluZS5lbnRlcigpXG4gICAgICAuYXBwZW5kKCdwYXRoJylcbiAgICAgIC5hdHRyKCdjbGFzcycsICdhdmctbGluZScpXG4gICAgICAubWVyZ2UoYXZnX2xpbmUpXG4gICAgICAudHJhbnNpdGlvbih0cmFuc2l0aW9uKVxuICAgICAgLmF0dHIoJ2QnLCBsaW5lKVxuICAgICAgLmF0dHIoJ2ZpbGwnLCAnbm9uZScpXG4gICAgICAuYXR0cignc3Ryb2tlJywgcHJvcHMuc3Ryb2tlKVxuICAgICAgLmF0dHIoJ3N0cm9rZS13aWR0aCcsIHByb3BzLnN0cm9rZVdpZHRoKTtcblxuICAgIC8vIExBQkVMU1xuICAgIGlmIChwcm9wcy5sYWJlbHMpIHtcbiAgICAgIGNvbnN0IGxhYmVsX2NvbnRhaW5lciA9IGcuYXBwZW5kU2VsZWN0KCdnLmxhYmVscycpO1xuXG4gICAgICAvLyBhdmcgbGFiZWxcbiAgICAgIGNvbnN0IGF2Z19sYWJlbCA9IGxhYmVsX2NvbnRhaW5lci5hcHBlbmRTZWxlY3QoJ2cuYXZnLWxhYmVsJylcbiAgICAgICAgLmF0dHIoJ3RyYW5zZm9ybScsIGB0cmFuc2xhdGUoJHtzY2FsZVgoZGF0ZVBhcnNlKGRhdGFbMTRdLmRhdGUpKX0sJHtzY2FsZVkoZGF0YVsxNF0udXNlX21lYW4pIC0gcHJvcHMuaGVpZ2h0IC8gMjB9KWApO1xuXG4gICAgICBhdmdfbGFiZWwuYXBwZW5kU2VsZWN0KCdsaW5lJylcbiAgICAgICAgLmF0dHIoJ3gxJywgMClcbiAgICAgICAgLmF0dHIoJ3gyJywgMClcbiAgICAgICAgLmF0dHIoJ3kxJywgcHJvcHMuaGVpZ2h0IC8gMjApXG4gICAgICAgIC5hdHRyKCd5MicsIDApO1xuXG4gICAgICBhdmdfbGFiZWwuYXBwZW5kU2VsZWN0KCd0ZXh0JylcbiAgICAgICAgLmF0dHIoJ2R4JywgLTEwKVxuICAgICAgICAuYXR0cignZHknLCAtNSlcbiAgICAgICAgLnRleHQoTXVzdGFjaGUucmVuZGVyKHByb3BzLnRleHQuYXZnLCB7IGF2ZXJhZ2U6IHByb3BzLmF2Z19kYXlzIH0pKTtcblxuICAgICAgLy8gbmV3IG51bWJlcnMgbGFiZWxcblxuICAgICAgLy8gR0VUIE1BWFxuXG4gICAgICBjb25zdCBtYXggPSBkMy5tYXgoZGF0YSwgZCA9PiBkLnVzZV9jb3VudCk7XG4gICAgICBjb25zdCBtYXhfdmFyID0gZGF0YS5maWx0ZXIoZCA9PiBkLnVzZV9jb3VudCA9PSBtYXgpWzBdO1xuICAgICAgY29uc3QgbmV3X25vc19sYWJlbCA9IGxhYmVsX2NvbnRhaW5lci5hcHBlbmRTZWxlY3QoJ2cubmV3LW5vcy1sYWJlbCcpXG4gICAgICAgIC5hdHRyKCd0cmFuc2Zvcm0nLCBgdHJhbnNsYXRlKCR7c2NhbGVYKGRhdGVQYXJzZShtYXhfdmFyLmRhdGUpKX0sJHtzY2FsZVkobWF4X3Zhci51c2VfY291bnQpfSlgKTtcblxuICAgICAgbmV3X25vc19sYWJlbC5hcHBlbmRTZWxlY3QoJ2xpbmUnKVxuICAgICAgICAuYXR0cigneDEnLCAtMTApXG4gICAgICAgIC5hdHRyKCd4MicsIDApXG4gICAgICAgIC5hdHRyKCd5MScsIDEwKVxuICAgICAgICAuYXR0cigneTInLCAxMCk7XG5cbiAgICAgIG5ld19ub3NfbGFiZWwuYXBwZW5kU2VsZWN0KCd0ZXh0JylcbiAgICAgICAgLnN0eWxlKCd0ZXh0LWFuY2hvcicsICdlbmQnKVxuICAgICAgICAuYXR0cignZHgnLCAtMTMpXG4gICAgICAgIC5hdHRyKCdkeScsIDEyKVxuICAgICAgICAudGV4dChgJHtwcm9wcy50ZXh0LmRhaWx5X251bWJlcnMgKyBwcm9wcy52YXJpYWJsZV9uYW1lfWApO1xuICAgIH1cbiAgICAvLyB0b29sdGlwXG4gICAgY29uc3QgdG9vbHRpcEJveCA9IHRoaXMuc2VsZWN0aW9uKClcbiAgICAgIC5hcHBlbmRTZWxlY3QoJ2Rpdi5jdXN0b20tdG9vbHRpcCcpO1xuXG4gICAgY29uc3QgdHRfaW5uZXIgPSB0b29sdGlwQm94LmFwcGVuZFNlbGVjdCgnZGl2LnRvb2x0aXAtaW5uZXInKTtcblxuICAgIGZ1bmN0aW9uIHNob3dUb29sdGlwKG9iaikge1xuICAgICAgY29uc3QgdG9vbHRpcF90ZXh0X2FkZCA9IHByb3BzLnBvcHVsYXRpb24gPyBwcm9wcy50ZXh0LnBlcl9wb3BfdHRfc3VmZml4IDogJyc7XG4gICAgICBjb25zdCBmb3JtYXRGdW5jdGlvbiA9IHByb3BzLnBvcHVsYXRpb24gPyByb3VuZCA6IG51bWJlckZvcm1hdF90dDtcbiAgICAgIGcuc2VsZWN0KGAuYmFyLmQtJHtvYmouZGF0ZS5yZXBsYWNlKC8tL2csICcnKX1gKVxuICAgICAgICAuY2xhc3NlZCgnYWN0aXZlJywgdHJ1ZSk7XG5cbiAgICAgIGNvbnN0IGNvb3JkcyA9IFtdO1xuXG4gICAgICBjb29yZHNbMF0gPSBzY2FsZVgoZGF0ZVBhcnNlKG9iai5kYXRlKSkgKyBtYXJnaW4ubGVmdCArIChzY2FsZVguYmFuZHdpZHRoKCkgLyAyKTtcbiAgICAgIGNvb3Jkc1sxXSA9IHNjYWxlWShvYmoudXNlX2NvdW50KSArIG1hcmdpbi50b3A7XG5cbiAgICAgIGNvbnN0IHEgPSBnZXRUb29sdGlwVHlwZShjb29yZHMsIFtwcm9wcy5oZWlnaHQsIHdpZHRoXSk7XG5cbiAgICAgIHRvb2x0aXBCb3guY2xhc3NlZCgndG9vbHRpcC1hY3RpdmUnLCB0cnVlKVxuICAgICAgICAuY2xhc3NlZCgndG9vbHRpcC1uZSB0b29sdGlwLXMgdG9vbHRpcC1uIHRvb2x0aXAtc3cgdG9vbHRpcC1udyB0b29sdGlwLXNlJywgZmFsc2UpXG4gICAgICAgIC5zdHlsZSgnbGVmdCcsIGAke2Nvb3Jkc1swXX1weGApXG4gICAgICAgIC5zdHlsZSgndG9wJywgYCR7Y29vcmRzWzFdfXB4YClcbiAgICAgICAgLmNsYXNzZWQoYHRvb2x0aXAtJHtxfWAsIHRydWUpO1xuXG4gICAgICB0dF9pbm5lci5hcHBlbmRTZWxlY3QoJ2Rpdi50dC1oZWFkZXInKVxuICAgICAgICAudGV4dChkYXRlRm9ybWF0X3R0KGRhdGVQYXJzZShvYmouZGF0ZSkpKTtcblxuICAgICAgdHRfaW5uZXIuYXBwZW5kU2VsZWN0KCdkaXYudHQtcm93JylcbiAgICAgICAgLnRleHQoZm9ybWF0RnVuY3Rpb24ob2JqLnVzZV9jb3VudCkgKyBwcm9wcy50ZXh0LnRvb2x0aXBfc3VmZml4ICsgcHJvcHMudmFyaWFibGVfbmFtZSArIHRvb2x0aXBfdGV4dF9hZGQpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGhpZGVUb29sdGlwKCkge1xuICAgICAgZy5zZWxlY3QoJy5iYXIuYWN0aXZlJylcbiAgICAgICAgLmNsYXNzZWQoJ2FjdGl2ZScsIGZhbHNlKTtcblxuICAgICAgdG9vbHRpcEJveC5jbGFzc2VkKCd0b29sdGlwLWFjdGl2ZScsIGZhbHNlKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBnZXRUb29sdGlwVHlwZShjb29yZHMsIHNpemUpIHtcbiAgICAgIGNvbnN0IGwgPSBbXTtcblxuICAgICAgY29uc3QgbnNfdGhyZXNob2xkID0gc2l6ZVsxXSA8IDUwMCA/IDQgOiAyO1xuXG4gICAgICBpZiAoY29vcmRzWzFdID4gc2l6ZVsxXSAvIG5zX3RocmVzaG9sZCkge1xuICAgICAgICBsLnB1c2goJ3MnKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGwucHVzaCgnbicpO1xuICAgICAgfVxuXG4gICAgICBpZiAoY29vcmRzWzBdID4gc2l6ZVswXSAvIDIpIHtcbiAgICAgICAgbC5wdXNoKCdlJyk7XG4gICAgICB9XG5cbiAgICAgIGlmIChjb29yZHNbMF0gPCBzaXplWzBdIC8gMikge1xuICAgICAgICBsLnB1c2goJ3cnKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGwuam9pbignJyk7XG4gICAgfVxuXG4gICAgLy8gQW5ub3RhdGlvbnNcbiAgICAvLyBSZXBvc2l0aW9uIGlmIGFscmVhZHkgb24gdGhlIHBhZ2VcbiAgICBjb25zdCBhbm5vdGF0aW9uX2NoZWNrID0gISFnLnNlbGVjdEFsbCgnZy5hbm5vdGF0aW9ucy1jb250YWluZXInKS5ub2RlKCk7XG5cbiAgICBwcm9wcy5hbm5vdGF0aW9ucyA9IHByb3BzLmFubm90YXRpb25zLmZpbHRlcihmdW5jdGlvbihkKSB7XG4gICAgICBpZiAoc2NhbGVYKGRhdGVQYXJzZShkLmRhdGUpKSAmJiBkLnRleHQubGVuZ3RoID4gMSkge1xuICAgICAgICByZXR1cm4gZDtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIGlmIChwcm9wcy5hbm5vdGF0aW9ucy5sZW5ndGggPiAwIHx8IGFubm90YXRpb25fY2hlY2spIHtcbiAgICAgIGNvbnN0IGFubm90YXRpb25zX2NvbnRhaW5lciA9IGcuYXBwZW5kU2VsZWN0KCdnLmFubm90YXRpb25zLWNvbnRhaW5lcicpXG4gICAgICAgIC5zZWxlY3RBbGwoJy5hbm5vdGF0aW9uJylcbiAgICAgICAgLmRhdGEocHJvcHMuYW5ub3RhdGlvbnMsIChkLCBpKSA9PiBkLmRhdGUpO1xuXG4gICAgICBjb25zdCBhbm5vdGF0aW9uID0gYW5ub3RhdGlvbnNfY29udGFpbmVyLmVudGVyKClcbiAgICAgICAgLmFwcGVuZCgnZycpXG4gICAgICAgIC5hdHRyKCdjbGFzcycsIGQgPT4gZC5jbGFzcyA/IGBhbm5vdGF0aW9uICR7ZC5jbGFzc31gIDogJ2Fubm90YXRpb24nKVxuICAgICAgICAuYXR0cigndHJhbnNmb3JtJywgZCA9PiBgdHJhbnNsYXRlKCR7c2NhbGVYKGRhdGVQYXJzZShkLmRhdGUpKX0sMClgKTtcblxuICAgICAgYW5ub3RhdGlvbnNfY29udGFpbmVyLm1lcmdlKGFubm90YXRpb25zX2NvbnRhaW5lcilcbiAgICAgICAgLnRyYW5zaXRpb24odHJhbnNpdGlvbilcbiAgICAgICAgLmF0dHIoJ3RyYW5zZm9ybScsIGQgPT4gYHRyYW5zbGF0ZSgke3NjYWxlWChkYXRlUGFyc2UoZC5kYXRlKSl9LDApYCk7XG5cbiAgICAgIGFubm90YXRpb24uYXBwZW5kU2VsZWN0KCdsaW5lJylcbiAgICAgICAgLmF0dHIoJ3gxJywgMClcbiAgICAgICAgLmF0dHIoJ3gyJywgMClcbiAgICAgICAgLmF0dHIoJ3kyJywgZnVuY3Rpb24oZCkge1xuICAgICAgICAgIGlmIChzY2FsZVgoZGF0ZVBhcnNlKGQuZGF0ZSkpID4gKHdpZHRoIC8gMikpIHtcbiAgICAgICAgICAgIHJldHVybiBwcm9wcy5oZWlnaHQgLyA2ICogMS41IC0gMTA7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBwcm9wcy5oZWlnaHQgLyA2ICogNCAtIDEwO1xuICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgICAgLmF0dHIoJ3kxJywgcHJvcHMuaGVpZ2h0IC0gbWFyZ2luLnRvcCAtIG1hcmdpbi5ib3R0b20pO1xuXG4gICAgICBjb25zdCB0ZXh0X2NvbnRhaW5lciA9IGFubm90YXRpb24uYXBwZW5kU2VsZWN0KCdnLnRleHQtY29udGFpbmVyJylcbiAgICAgICAgLmF0dHIoJ3RyYW5zZm9ybScsIGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgICBpZiAoc2NhbGVYKGRhdGVQYXJzZShkLmRhdGUpKSA+ICh3aWR0aCAvIDIpKSB7XG4gICAgICAgICAgICByZXR1cm4gYHRyYW5zbGF0ZSgtOCwke3Byb3BzLmhlaWdodCAvIDYgKiAxLjV9KWA7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBgdHJhbnNsYXRlKDgsJHtwcm9wcy5oZWlnaHQgLyA2ICogNH0pYDtcbiAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIC5hdHRyKCd0ZXh0LWFuY2hvcicsIGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgICBpZiAoc2NhbGVYKGRhdGVQYXJzZShkLmRhdGUpKSA+ICh3aWR0aCAvIDIpKSB7XG4gICAgICAgICAgICByZXR1cm4gJ2VuZCc7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiAnc3RhcnQnO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgIHRleHRfY29udGFpbmVyLmFwcGVuZFNlbGVjdCgndGV4dC5kYXRlJylcbiAgICAgICAgLnRleHQoZCA9PiBkYXRlRm9ybWF0X3R0KGRhdGVQYXJzZShkLmRhdGUpKSk7XG5cbiAgICAgIHRleHRfY29udGFpbmVyLmFwcGVuZFNlbGVjdCgndGV4dC50ZXh0JylcbiAgICAgICAgLmF0dHIoJ2R5JywgMTYpXG4gICAgICAgIC50ZXh0KGQgPT4gZC50ZXh0KTtcblxuICAgICAgYW5ub3RhdGlvbnNfY29udGFpbmVyLmV4aXQoKVxuICAgICAgICAucmVtb3ZlKCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgV2Vla2x5QXZlcmFnZTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/lib/chart.js\n");

/***/ })

})