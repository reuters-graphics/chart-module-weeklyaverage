webpackHotUpdate("static/development/pages/index.js",{

/***/ "./src/lib/chart.js":
/*!**************************!*\
  !*** ./src/lib/chart.js ***!
  \**************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/assertThisInitialized */ \"./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/esm/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/esm/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/utils */ \"./src/lib/utils/utils.js\");\n/* harmony import */ var _base_ChartComponent__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./base/ChartComponent */ \"./src/lib/base/ChartComponent.js\");\n/* harmony import */ var mustache__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! mustache */ \"./node_modules/mustache/mustache.js\");\n/* harmony import */ var mustache__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(mustache__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var _utils_d3__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./utils/d3 */ \"./src/lib/utils/d3.js\");\n\n\n\n\n\n\n\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Object(_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n // import defaultData from './defaultData.json';\n\nvar dateParse = _utils_d3__WEBPACK_IMPORTED_MODULE_10__[\"default\"].timeParse('%Y-%m-%d');\nvar dateFormat = _utils_d3__WEBPACK_IMPORTED_MODULE_10__[\"default\"].timeFormat('%b %e');\nvar dateFormat_tt = _utils_d3__WEBPACK_IMPORTED_MODULE_10__[\"default\"].timeFormat('%B %e');\nvar numberFormat_tt = _utils_d3__WEBPACK_IMPORTED_MODULE_10__[\"default\"].format(',');\n\nvar WeeklyAverage = /*#__PURE__*/function (_ChartComponent) {\n  Object(_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(WeeklyAverage, _ChartComponent);\n\n  var _super = _createSuper(WeeklyAverage);\n\n  function WeeklyAverage() {\n    var _this;\n\n    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, WeeklyAverage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_this), \"defaultProps\", {\n      stroke: 'steelblue',\n      strokeWidth: 2.5,\n      fill: '#eee',\n      height: 200,\n      avg_days: 7,\n      annotations: [],\n      population: false,\n      bars: true,\n      padding: 0,\n      labels: false,\n      x_axis: true,\n      variable_name: 'cases',\n      date_range: [],\n      left_y_axis: false,\n      margin: {\n        left: 20,\n        right: 50,\n        top: 10,\n        bottom: 30\n      },\n      text: {\n        daily_numbers: 'Daily new ',\n        tooltip_suffix: ' new ',\n        avg: '{{ average }}-day average',\n        per_pop_tt_suffix: ' per 100k people in the population',\n        subhed: ''\n      }\n    });\n\n    Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_this), \"defaultData\", []);\n\n    return _this;\n  }\n\n  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(WeeklyAverage, [{\n    key: \"draw\",\n    value: function draw() {\n      var data = this.data();\n      var props = this.props();\n      var node = this.selection().node();\n      var dateList = [];\n      data.forEach(function (d, i) {\n        d.use_count = props.population ? d.count / props.population * 100000 : d.count;\n        d.mean = _utils_d3__WEBPACK_IMPORTED_MODULE_10__[\"default\"].mean(data.slice(i - props.avg_days, i), function (d) {\n          return +d.count;\n        }); // avg calc\n\n        d.use_mean = props.population ? d.mean / props.population * 100000 : d.mean;\n      });\n\n      if (props.date_range.length > 1) {\n        var startDate = dateParse(props.date_range[0]);\n        var endDate = dateParse(props.date_range[1]);\n\n        if (startDate < endDate && endDate <= _utils_d3__WEBPACK_IMPORTED_MODULE_10__[\"default\"].max(data, function (d) {\n          return dateParse(d.date);\n        })) {\n          data = data.filter(function (d) {\n            return dateParse(d.date) > startDate && dateParse(d.date) < endDate;\n          });\n          dateList = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_7__[\"getDates\"])(startDate, endDate);\n        } else {\n          dateList = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_7__[\"getDates\"])(dateParse(data[0].date), dateParse(data[data.length - 1].date)); // needs reworking\n        }\n      } else {}\n\n      var _node$getBoundingClie = node.getBoundingClientRect(),\n          width = _node$getBoundingClie.width;\n\n      var transition = _utils_d3__WEBPACK_IMPORTED_MODULE_10__[\"default\"].transition().duration(750);\n\n      if (props.text.subhed.length > 0) {\n        this.selection().appendSelect('p.subhed').text(props.text.subhed);\n      }\n\n      var g = this.selection().appendSelect('svg') // see docs in ./utils/d3.js\n      .attr('width', width).attr('height', props.height).appendSelect('g').attr('transform', \"translate(\".concat(props.margin.left, \", \").concat(props.margin.top, \")\")); // x scale\n\n      var scaleX = _utils_d3__WEBPACK_IMPORTED_MODULE_10__[\"default\"].scaleBand().round(false).range([0, width - props.margin.right - props.margin.left]).domain(dateList).padding(props.padding); // y scale\n\n      var scaleY = _utils_d3__WEBPACK_IMPORTED_MODULE_10__[\"default\"].scaleLinear().range([props.height - props.margin.bottom - props.margin.top, 0]).domain(_utils_d3__WEBPACK_IMPORTED_MODULE_10__[\"default\"].extent(data, function (d) {\n        return +d.use_count;\n      })); // line\n\n      var line = _utils_d3__WEBPACK_IMPORTED_MODULE_10__[\"default\"].line().x(function (d) {\n        return scaleX(dateParse(d.date));\n      }).y(function (d) {\n        return scaleY(d.use_mean ? d.use_mean : 0);\n      });\n\n      if (props.left_y_axis) {\n        g.appendSelect('g.axis--y').attr('class', 'axis--y axis').transition(transition).attr('transform', 'translate(60,0)').call(_utils_d3__WEBPACK_IMPORTED_MODULE_10__[\"default\"].axisLeft(scaleY).ticks(1));\n        g.select('.axis--y').selectAll('.tick').each(function (d) {\n          if (d === 0) {\n            this.remove();\n          }\n        });\n      } else {\n        g.appendSelect('g.axis--y').attr('class', 'axis--y axis').transition(transition).attr('transform', \"translate(\".concat(width - props.margin.right - props.margin.left, \",0)\")).call(_utils_d3__WEBPACK_IMPORTED_MODULE_10__[\"default\"].axisRight(scaleY).ticks(props.bars ? 3 : 1));\n      }\n\n      if (props.x_axis) {\n        g.appendSelect('g.axis--x').attr('class', 'axis--x axis').transition(transition).attr('transform', \"translate(0,\".concat(props.height - props.margin.bottom - props.margin.top, \")\")).call(_utils_d3__WEBPACK_IMPORTED_MODULE_10__[\"default\"].axisBottom(scaleX).tickValues([dateList[0], dateList[dateList.length - 1]]).tickFormat(dateFormat));\n      }\n\n      if (props.bars) {\n        var bars = g.appendSelect('g.bars-container').selectAll('.bar').data(data, function (d, i) {\n          return d.date;\n        }); // for smooth data updation\n\n        bars.enter().append('rect').attr('class', function (d) {\n          return \"bar d-\".concat(d.date.replace(/-/g, ''));\n        }).style('fill', props.fill).attr('height', function (d) {\n          return props.height - props.margin.top - props.margin.bottom - scaleY(+d.use_count);\n        }).attr('x', function (d, i) {\n          return scaleX(dateParse(d.date));\n        }).attr('y', function (d) {\n          return scaleY(+d.use_count);\n        }).attr('width', scaleX.bandwidth()).merge(bars).transition(transition).attr('height', function (d) {\n          return props.height - props.margin.top - props.margin.bottom - scaleY(+d.use_count);\n        }).attr('x', function (d, i) {\n          return scaleX(dateParse(d.date));\n        }).attr('y', function (d) {\n          return scaleY(+d.use_count);\n        }).attr('width', scaleX.bandwidth());\n        bars.exit().transition(transition).attr('height', 0).remove();\n        var bars_dummy = g.appendSelect('g.dummy-container').selectAll('.dummy').data(data, function (d, i) {\n          return d.date;\n        });\n        bars_dummy.enter().append('rect').style('fill', 'white').attr('class', 'dummy').style('opacity', 0).attr('height', function (d) {\n          return props.height;\n        }).attr('x', function (d, i) {\n          return scaleX(dateParse(d.date));\n        }).attr('y', function (d) {\n          return 0;\n        }).attr('width', scaleX.bandwidth()).on('mouseover', showTooltip).on('mouseout', hideTooltip).merge(bars_dummy).transition(transition).attr('height', function (d) {\n          return props.height;\n        }).attr('x', function (d, i) {\n          return scaleX(dateParse(d.date));\n        }).attr('y', function (d) {\n          return 0;\n        }).attr('width', scaleX.bandwidth());\n        bars_dummy.exit().transition(transition).attr('height', 0).remove();\n        bars_dummy.on('mouseover', showTooltip).on('mouseout', hideTooltip);\n      } // avg line\n\n\n      var avg_line = g.selectAll('.avg-line').data([data]);\n      avg_line.enter().append('path').attr('class', 'avg-line').merge(avg_line).transition(transition).attr('d', line).attr('fill', 'none').attr('stroke', props.stroke).attr('stroke-width', props.strokeWidth); // LABELS\n\n      if (props.labels) {\n        var label_container = g.appendSelect('g.labels'); // avg label\n\n        var avg_label = label_container.appendSelect('g.avg-label').attr('transform', \"translate(\".concat(scaleX(dateParse(data[14].date)), \",\").concat(scaleY(data[14].use_mean) - props.height / 20, \")\"));\n        avg_label.appendSelect('line').attr('x1', 0).attr('x2', 0).attr('y1', props.height / 20).attr('y2', 0);\n        avg_label.appendSelect('text').attr('dx', -10).attr('dy', -5).text(mustache__WEBPACK_IMPORTED_MODULE_9___default.a.render(props.text.avg, {\n          average: props.avg_days\n        })); // new numbers label\n        // GET MAX\n\n        var max = _utils_d3__WEBPACK_IMPORTED_MODULE_10__[\"default\"].max(data, function (d) {\n          return d.use_count;\n        });\n        var max_var = data.filter(function (d) {\n          return d.use_count == max;\n        })[0];\n        var new_nos_label = label_container.appendSelect('g.new-nos-label').attr('transform', \"translate(\".concat(scaleX(dateParse(max_var.date)), \",\").concat(scaleY(max_var.use_count), \")\"));\n        new_nos_label.appendSelect('line').attr('x1', -10).attr('x2', 0).attr('y1', 10).attr('y2', 10);\n        new_nos_label.appendSelect('text').style('text-anchor', 'end').attr('dx', -13).attr('dy', 12).text(\"\".concat(props.text.daily_numbers + props.variable_name));\n      } // tooltip\n\n\n      var tooltipBox = this.selection().appendSelect('div.custom-tooltip');\n      var tt_inner = tooltipBox.appendSelect('div.tooltip-inner');\n\n      function showTooltip(obj) {\n        var tooltip_text_add = props.population ? props.text.per_pop_tt_suffix : '';\n        var formatFunction = props.population ? _utils_utils__WEBPACK_IMPORTED_MODULE_7__[\"round\"] : numberFormat_tt;\n        g.select(\".bar.d-\".concat(obj.date.replace(/-/g, ''))).classed('active', true);\n        var coords = [];\n        coords[0] = scaleX(dateParse(obj.date)) + props.margin.left + scaleX.bandwidth() / 2;\n        coords[1] = scaleY(obj.use_count) + props.margin.top;\n        var q = getTooltipType(coords, [props.height, width]);\n        tooltipBox.classed('tooltip-active', true).classed('tooltip-ne tooltip-s tooltip-n tooltip-sw tooltip-nw tooltip-se', false).style('left', \"\".concat(coords[0], \"px\")).style('top', \"\".concat(coords[1], \"px\")).classed(\"tooltip-\".concat(q), true);\n        tt_inner.appendSelect('div.tt-header').text(dateFormat_tt(dateParse(obj.date)));\n        tt_inner.appendSelect('div.tt-row').text(formatFunction(obj.use_count) + props.text.tooltip_suffix + props.variable_name + tooltip_text_add);\n      }\n\n      function hideTooltip() {\n        g.select('.bar.active').classed('active', false);\n        tooltipBox.classed('tooltip-active', false);\n      }\n\n      function getTooltipType(coords, size) {\n        var l = [];\n        var ns_threshold = size[1] < 500 ? 4 : 2;\n\n        if (coords[1] > size[1] / ns_threshold) {\n          l.push('s');\n        } else {\n          l.push('n');\n        }\n\n        if (coords[0] > size[0] / 2) {\n          l.push('e');\n        }\n\n        if (coords[0] < size[0] / 2) {\n          l.push('w');\n        }\n\n        return l.join('');\n      } // Annotations\n      // Reposition if already on the page\n\n\n      var annotation_check = !!g.selectAll('g.annotations-container').node();\n      props.annotations = props.annotations.filter(function (d) {\n        if (scaleX(dateParse(d.date)) && d.text.length > 1) {\n          return d;\n        }\n      });\n\n      if (props.annotations.length > 0 || annotation_check) {\n        var annotations_container = g.appendSelect('g.annotations-container').selectAll('.annotation').data(props.annotations, function (d, i) {\n          return d.date;\n        });\n        var annotation = annotations_container.enter().append('g').attr('class', function (d) {\n          return d[\"class\"] ? \"annotation \".concat(d[\"class\"]) : 'annotation';\n        }).attr('transform', function (d) {\n          return \"translate(\".concat(scaleX(dateParse(d.date)), \",0)\");\n        });\n        annotations_container.merge(annotations_container).transition(transition).attr('transform', function (d) {\n          return \"translate(\".concat(scaleX(dateParse(d.date)), \",0)\");\n        });\n        annotation.appendSelect('line').attr('x1', 0).attr('x2', 0).attr('y2', function (d) {\n          if (scaleX(dateParse(d.date)) > width / 2) {\n            return props.height / 6 * 1.5 - 10;\n          } else {\n            return props.height / 6 * 4 - 10;\n          }\n        }).attr('y1', props.height - props.margin.top - props.margin.bottom);\n        var text_container = annotation.appendSelect('g.text-container').attr('transform', function (d) {\n          if (scaleX(dateParse(d.date)) > width / 2) {\n            return \"translate(-8,\".concat(props.height / 6 * 1.5, \")\");\n          } else {\n            return \"translate(8,\".concat(props.height / 6 * 4, \")\");\n          }\n        }).attr('text-anchor', function (d) {\n          if (scaleX(dateParse(d.date)) > width / 2) {\n            return 'end';\n          } else {\n            return 'start';\n          }\n        });\n        text_container.appendSelect('text.date').text(function (d) {\n          return dateFormat_tt(dateParse(d.date));\n        });\n        text_container.appendSelect('text.text').attr('dy', 16).text(function (d) {\n          return d.text;\n        });\n        annotations_container.exit().remove();\n      }\n\n      return this;\n    }\n  }]);\n\n  return WeeklyAverage;\n}(_base_ChartComponent__WEBPACK_IMPORTED_MODULE_8__[\"default\"]);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (WeeklyAverage);\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports_1 = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports_1;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports_1)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/lib/chart.js\n");

/***/ })

})